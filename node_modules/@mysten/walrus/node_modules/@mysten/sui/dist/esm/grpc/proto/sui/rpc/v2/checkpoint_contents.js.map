{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/checkpoint_contents.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/checkpoint_contents.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { MessageType } from \"@protobuf-ts/runtime\";\nimport { UserSignature } from \"./signature\";\nimport { Bcs } from \"./bcs\";\n/**\n * The committed to contents of a checkpoint.\n *\n * @generated from protobuf message sui.rpc.v2.CheckpointContents\n */\nexport interface CheckpointContents {\n    /**\n     * This CheckpointContents serialized as BCS.\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.Bcs bcs = 1;\n     */\n    bcs?: Bcs;\n    /**\n     * The digest of this CheckpointContents.\n     *\n     * @generated from protobuf field: optional string digest = 2;\n     */\n    digest?: string;\n    /**\n     * Version of this CheckpointContents\n     *\n     * @generated from protobuf field: optional int32 version = 3;\n     */\n    version?: number;\n    /**\n     * Set of transactions committed to in this checkpoint.\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.CheckpointedTransactionInfo transactions = 4;\n     */\n    transactions: CheckpointedTransactionInfo[];\n}\n/**\n * Transaction information committed to in a checkpoint.\n *\n * @generated from protobuf message sui.rpc.v2.CheckpointedTransactionInfo\n */\nexport interface CheckpointedTransactionInfo {\n    /**\n     * Digest of the transaction.\n     *\n     * @generated from protobuf field: optional string transaction = 1;\n     */\n    transaction?: string;\n    /**\n     * Digest of the effects.\n     *\n     * @generated from protobuf field: optional string effects = 2;\n     */\n    effects?: string;\n    /**\n     * Set of user signatures that authorized the transaction.\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.UserSignature signatures = 3;\n     */\n    signatures: UserSignature[];\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass CheckpointContents$Type extends MessageType<CheckpointContents> {\n    constructor() {\n        super(\"sui.rpc.v2.CheckpointContents\", [\n            { no: 1, name: \"bcs\", kind: \"message\", T: () => Bcs },\n            { no: 2, name: \"digest\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"version\", kind: \"scalar\", opt: true, T: 5 /*ScalarType.INT32*/ },\n            { no: 4, name: \"transactions\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => CheckpointedTransactionInfo }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.CheckpointContents\n */\nexport const CheckpointContents = new CheckpointContents$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CheckpointedTransactionInfo$Type extends MessageType<CheckpointedTransactionInfo> {\n    constructor() {\n        super(\"sui.rpc.v2.CheckpointedTransactionInfo\", [\n            { no: 1, name: \"transaction\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"effects\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"signatures\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => UserSignature }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.CheckpointedTransactionInfo\n */\nexport const CheckpointedTransactionInfo = new CheckpointedTransactionInfo$Type();\n"],
  "mappings": "AAWA,SAAS,mBAAmB;AAC5B,SAAS,qBAAqB;AAC9B,SAAS,WAAW;AA0DpB,MAAM,gCAAgC,YAAgC;AAAA,EAClE,cAAc;AACV,UAAM,iCAAiC;AAAA,MACnC,EAAE,IAAI,GAAG,MAAM,OAAO,MAAM,WAAW,GAAG,MAAM,IAAI;AAAA,MACpD;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAU,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC/E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAW,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAuB;AAAA,MAC/E,EAAE,IAAI,GAAG,MAAM,gBAAgB,MAAM,WAAW,QAAQ,GAAyB,GAAG,MAAM,4BAA4B;AAAA,IAC1H,CAAC;AAAA,EACL;AACJ;AAIO,MAAM,qBAAqB,IAAI,wBAAwB;AAE9D,MAAM,yCAAyC,YAAyC;AAAA,EACpF,cAAc;AACV,UAAM,0CAA0C;AAAA,MAC5C;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAe,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MACpF;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAW,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAChF,EAAE,IAAI,GAAG,MAAM,cAAc,MAAM,WAAW,QAAQ,GAAyB,GAAG,MAAM,cAAc;AAAA,IAC1G,CAAC;AAAA,EACL;AACJ;AAIO,MAAM,8BAA8B,IAAI,iCAAiC;",
  "names": []
}
