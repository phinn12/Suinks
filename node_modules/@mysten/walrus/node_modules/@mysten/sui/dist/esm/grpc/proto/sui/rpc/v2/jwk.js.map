{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/jwk.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/jwk.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { MessageType } from \"@protobuf-ts/runtime\";\n/**\n * Key to uniquely identify a JWK.\n *\n * @generated from protobuf message sui.rpc.v2.JwkId\n */\nexport interface JwkId {\n    /**\n     * The issuer or identity of the OIDC provider.\n     *\n     * @generated from protobuf field: optional string iss = 1;\n     */\n    iss?: string;\n    /**\n     * A key ID used to uniquely identify a key from an OIDC provider.\n     *\n     * @generated from protobuf field: optional string kid = 2;\n     */\n    kid?: string;\n}\n/**\n * A JSON web key.\n *\n * Struct that contains info for a JWK. A list of them for different kinds can\n * be retrieved from the JWK endpoint (for example, <https://www.googleapis.com/oauth2/v3/certs>).\n * The JWK is used to verify the JWT token.\n *\n * @generated from protobuf message sui.rpc.v2.Jwk\n */\nexport interface Jwk {\n    /**\n     * Key type parameter, https://datatracker.ietf.org/doc/html/rfc7517#section-4.1.\n     *\n     * @generated from protobuf field: optional string kty = 1;\n     */\n    kty?: string;\n    /**\n     * RSA public exponent, https://datatracker.ietf.org/doc/html/rfc7517#section-9.3.\n     *\n     * @generated from protobuf field: optional string e = 2;\n     */\n    e?: string;\n    /**\n     * RSA modulus, https://datatracker.ietf.org/doc/html/rfc7517#section-9.3.\n     *\n     * @generated from protobuf field: optional string n = 3;\n     */\n    n?: string;\n    /**\n     * Algorithm parameter, https://datatracker.ietf.org/doc/html/rfc7517#section-4.4.\n     *\n     * @generated from protobuf field: optional string alg = 4;\n     */\n    alg?: string;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass JwkId$Type extends MessageType<JwkId> {\n    constructor() {\n        super(\"sui.rpc.v2.JwkId\", [\n            { no: 1, name: \"iss\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"kid\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.JwkId\n */\nexport const JwkId = new JwkId$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Jwk$Type extends MessageType<Jwk> {\n    constructor() {\n        super(\"sui.rpc.v2.Jwk\", [\n            { no: 1, name: \"kty\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"e\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"n\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 4, name: \"alg\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.Jwk\n */\nexport const Jwk = new Jwk$Type();\n"],
  "mappings": "AAWA,SAAS,mBAAmB;AAwD5B,MAAM,mBAAmB,YAAmB;AAAA,EACxC,cAAc;AACV,UAAM,oBAAoB;AAAA,MACtB;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAO,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC5E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAO,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,IAChF,CAAC;AAAA,EACL;AACJ;AAIO,MAAM,QAAQ,IAAI,WAAW;AAEpC,MAAM,iBAAiB,YAAiB;AAAA,EACpC,cAAc;AACV,UAAM,kBAAkB;AAAA,MACpB;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAO,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC5E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAK,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC1E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAK,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC1E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAO,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,IAChF,CAAC;AAAA,EACL;AACJ;AAIO,MAAM,MAAM,IAAI,SAAS;",
  "names": []
}
