{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/name_service.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/name_service.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { ServiceType } from \"@protobuf-ts/runtime-rpc\";\nimport { MessageType } from \"@protobuf-ts/runtime\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\n/**\n * @generated from protobuf message sui.rpc.v2.LookupNameRequest\n */\nexport interface LookupNameRequest {\n    /**\n     * Required. The SuiNS name to lookup.\n     *\n     * Supports both `@name` as well as `name.sui` formats.\n     *\n     * @generated from protobuf field: optional string name = 1;\n     */\n    name?: string;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.LookupNameResponse\n */\nexport interface LookupNameResponse {\n    /**\n     * The record for the requested name\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.NameRecord record = 1;\n     */\n    record?: NameRecord;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.ReverseLookupNameRequest\n */\nexport interface ReverseLookupNameRequest {\n    /**\n     * Required. The address to perform a reverse lookup for.\n     *\n     * @generated from protobuf field: optional string address = 1;\n     */\n    address?: string;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.ReverseLookupNameResponse\n */\nexport interface ReverseLookupNameResponse {\n    /**\n     * The record for the SuiNS name linked to the requested address\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.NameRecord record = 1;\n     */\n    record?: NameRecord;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.NameRecord\n */\nexport interface NameRecord {\n    /**\n     * Id of this record.\n     *\n     * Note that records are stored on chain as dynamic fields of the type\n     * `Field<Domain,NameRecord>`.\n     *\n     * @generated from protobuf field: optional string id = 1;\n     */\n    id?: string;\n    /**\n     * The SuiNS name of this record\n     *\n     * @generated from protobuf field: optional string name = 2;\n     */\n    name?: string;\n    /**\n     * The ID of the `RegistrationNFT` assigned to this record.\n     *\n     * The owner of the corresponding `RegistrationNFT` has the rights to\n     * be able to change and adjust the `target_address` of this domain.\n     *\n     * It is possible that the ID changes if the record expires and is\n     * purchased by someone else.\n     *\n     * @generated from protobuf field: optional string registration_nft_id = 3;\n     */\n    registrationNftId?: string;\n    /**\n     * Timestamp when the record expires.\n     *\n     * This is either the expiration of the record itself or the expiration of\n     * this record's parent if this is a leaf record.\n     *\n     * @generated from protobuf field: optional google.protobuf.Timestamp expiration_timestamp = 4;\n     */\n    expirationTimestamp?: Timestamp;\n    /**\n     * The target address that this name points to\n     *\n     * @generated from protobuf field: optional string target_address = 5;\n     */\n    targetAddress?: string;\n    /**\n     * Additional data which may be stored in a record\n     *\n     * @generated from protobuf field: map<string, string> data = 6;\n     */\n    data: {\n        [key: string]: string;\n    };\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass LookupNameRequest$Type extends MessageType<LookupNameRequest> {\n    constructor() {\n        super(\"sui.rpc.v2.LookupNameRequest\", [\n            { no: 1, name: \"name\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.LookupNameRequest\n */\nexport const LookupNameRequest = new LookupNameRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass LookupNameResponse$Type extends MessageType<LookupNameResponse> {\n    constructor() {\n        super(\"sui.rpc.v2.LookupNameResponse\", [\n            { no: 1, name: \"record\", kind: \"message\", T: () => NameRecord }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.LookupNameResponse\n */\nexport const LookupNameResponse = new LookupNameResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ReverseLookupNameRequest$Type extends MessageType<ReverseLookupNameRequest> {\n    constructor() {\n        super(\"sui.rpc.v2.ReverseLookupNameRequest\", [\n            { no: 1, name: \"address\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ReverseLookupNameRequest\n */\nexport const ReverseLookupNameRequest = new ReverseLookupNameRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ReverseLookupNameResponse$Type extends MessageType<ReverseLookupNameResponse> {\n    constructor() {\n        super(\"sui.rpc.v2.ReverseLookupNameResponse\", [\n            { no: 1, name: \"record\", kind: \"message\", T: () => NameRecord }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ReverseLookupNameResponse\n */\nexport const ReverseLookupNameResponse = new ReverseLookupNameResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass NameRecord$Type extends MessageType<NameRecord> {\n    constructor() {\n        super(\"sui.rpc.v2.NameRecord\", [\n            { no: 1, name: \"id\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"name\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"registration_nft_id\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 4, name: \"expiration_timestamp\", kind: \"message\", T: () => Timestamp },\n            { no: 5, name: \"target_address\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 6, name: \"data\", kind: \"map\", K: 9 /*ScalarType.STRING*/, V: { kind: \"scalar\", T: 9 /*ScalarType.STRING*/ } }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.NameRecord\n */\nexport const NameRecord = new NameRecord$Type();\n/**\n * @generated ServiceType for protobuf service sui.rpc.v2.NameService\n */\nexport const NameService = new ServiceType(\"sui.rpc.v2.NameService\", [\n    { name: \"LookupName\", options: {}, I: LookupNameRequest, O: LookupNameResponse },\n    { name: \"ReverseLookupName\", options: {}, I: ReverseLookupNameRequest, O: ReverseLookupNameResponse }\n]);\n"],
  "mappings": "AAWA,SAAS,mBAAmB;AAC5B,SAAS,mBAAmB;AAC5B,SAAS,iBAAiB;AAuG1B,MAAM,+BAA+B,YAA+B;AAAA,EAChE,cAAc;AACV,UAAM,gCAAgC;AAAA,MAClC;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAQ,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,IACjF,CAAC;AAAA,EACL;AACJ;AAIO,MAAM,oBAAoB,IAAI,uBAAuB;AAE5D,MAAM,gCAAgC,YAAgC;AAAA,EAClE,cAAc;AACV,UAAM,iCAAiC;AAAA,MACnC,EAAE,IAAI,GAAG,MAAM,UAAU,MAAM,WAAW,GAAG,MAAM,WAAW;AAAA,IAClE,CAAC;AAAA,EACL;AACJ;AAIO,MAAM,qBAAqB,IAAI,wBAAwB;AAE9D,MAAM,sCAAsC,YAAsC;AAAA,EAC9E,cAAc;AACV,UAAM,uCAAuC;AAAA,MACzC;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAW,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,IACpF,CAAC;AAAA,EACL;AACJ;AAIO,MAAM,2BAA2B,IAAI,8BAA8B;AAE1E,MAAM,uCAAuC,YAAuC;AAAA,EAChF,cAAc;AACV,UAAM,wCAAwC;AAAA,MAC1C,EAAE,IAAI,GAAG,MAAM,UAAU,MAAM,WAAW,GAAG,MAAM,WAAW;AAAA,IAClE,CAAC;AAAA,EACL;AACJ;AAIO,MAAM,4BAA4B,IAAI,+BAA+B;AAE5E,MAAM,wBAAwB,YAAwB;AAAA,EAClD,cAAc;AACV,UAAM,yBAAyB;AAAA,MAC3B;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAM,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC3E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAQ,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC7E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAuB,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC5F,EAAE,IAAI,GAAG,MAAM,wBAAwB,MAAM,WAAW,GAAG,MAAM,UAAU;AAAA,MAC3E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAkB,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MACvF,EAAE,IAAI,GAAG,MAAM,QAAQ,MAAM,OAAO,GAAG,GAAyB,GAAG;AAAA,QAAE,MAAM;AAAA,QAAU,GAAG;AAAA;AAAA,MAAwB,EAAE;AAAA,IACtH,CAAC;AAAA,EACL;AACJ;AAIO,MAAM,aAAa,IAAI,gBAAgB;AAIvC,MAAM,cAAc,IAAI,YAAY,0BAA0B;AAAA,EACjE,EAAE,MAAM,cAAc,SAAS,CAAC,GAAG,GAAG,mBAAmB,GAAG,mBAAmB;AAAA,EAC/E,EAAE,MAAM,qBAAqB,SAAS,CAAC,GAAG,GAAG,0BAA0B,GAAG,0BAA0B;AACxG,CAAC;",
  "names": []
}
