{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/object.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/object.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { MessageType } from \"@protobuf-ts/runtime\";\nimport { Value } from \"../../../google/protobuf/struct\";\nimport { Package } from \"./move_package\";\nimport { Owner } from \"./owner\";\nimport { Bcs } from \"./bcs\";\n/**\n * An object on the Sui blockchain.\n *\n * @generated from protobuf message sui.rpc.v2.Object\n */\nexport interface Object {\n    /**\n     * This Object serialized as BCS.\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.Bcs bcs = 1;\n     */\n    bcs?: Bcs;\n    /**\n     * `ObjectId` for this object.\n     *\n     * @generated from protobuf field: optional string object_id = 2;\n     */\n    objectId?: string;\n    /**\n     * Version of the object.\n     *\n     * @generated from protobuf field: optional uint64 version = 3;\n     */\n    version?: bigint;\n    /**\n     * The digest of this Object.\n     *\n     * @generated from protobuf field: optional string digest = 4;\n     */\n    digest?: string;\n    /**\n     * Owner of the object.\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.Owner owner = 5;\n     */\n    owner?: Owner;\n    /**\n     * The type of this object.\n     *\n     * This will be 'package' for packages and a StructTag for move structs.\n     *\n     * @generated from protobuf field: optional string object_type = 6;\n     */\n    objectType?: string;\n    /**\n     * DEPRECATED this field is no longer used to determine whether a tx can transfer this\n     * object. Instead, it is always calculated from the objects type when loaded in execution.\n     *\n     * Only set for Move structs\n     *\n     * @generated from protobuf field: optional bool has_public_transfer = 7;\n     */\n    hasPublicTransfer?: boolean;\n    /**\n     * BCS bytes of a Move struct value.\n     *\n     * Only set for Move structs\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.Bcs contents = 8;\n     */\n    contents?: Bcs;\n    /**\n     * Package information for Move Packages\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.Package package = 9;\n     */\n    package?: Package;\n    /**\n     * The digest of the transaction that created or last mutated this object\n     *\n     * @generated from protobuf field: optional string previous_transaction = 10;\n     */\n    previousTransaction?: string;\n    /**\n     * The amount of SUI to rebate if this object gets deleted.\n     * This number is re-calculated each time the object is mutated based on\n     * the present storage gas price.\n     *\n     * @generated from protobuf field: optional uint64 storage_rebate = 11;\n     */\n    storageRebate?: bigint;\n    /**\n     * JSON rendering of the object.\n     *\n     * @generated from protobuf field: optional google.protobuf.Value json = 100;\n     */\n    json?: Value;\n    /**\n     * Current balance if this object is a `0x2::coin::Coin<T>`\n     *\n     * @generated from protobuf field: optional uint64 balance = 101;\n     */\n    balance?: bigint;\n}\n/**\n * Set of Objects\n *\n * @generated from protobuf message sui.rpc.v2.ObjectSet\n */\nexport interface ObjectSet {\n    /**\n     * Objects are sorted by the key `(object_id, version)`.\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.Object objects = 1;\n     */\n    objects: Object[];\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass Object$Type extends MessageType<Object> {\n    constructor() {\n        super(\"sui.rpc.v2.Object\", [\n            { no: 1, name: \"bcs\", kind: \"message\", T: () => Bcs },\n            { no: 2, name: \"object_id\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"version\", kind: \"scalar\", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },\n            { no: 4, name: \"digest\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 5, name: \"owner\", kind: \"message\", T: () => Owner },\n            { no: 6, name: \"object_type\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 7, name: \"has_public_transfer\", kind: \"scalar\", opt: true, T: 8 /*ScalarType.BOOL*/ },\n            { no: 8, name: \"contents\", kind: \"message\", T: () => Bcs },\n            { no: 9, name: \"package\", kind: \"message\", T: () => Package },\n            { no: 10, name: \"previous_transaction\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 11, name: \"storage_rebate\", kind: \"scalar\", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },\n            { no: 100, name: \"json\", kind: \"message\", T: () => Value },\n            { no: 101, name: \"balance\", kind: \"scalar\", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.Object\n */\nexport const Object = new Object$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ObjectSet$Type extends MessageType<ObjectSet> {\n    constructor() {\n        super(\"sui.rpc.v2.ObjectSet\", [\n            { no: 1, name: \"objects\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => Object }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ObjectSet\n */\nexport const ObjectSet = new ObjectSet$Type();\n"],
  "mappings": "AAWA,SAAS,mBAAmB;AAC5B,SAAS,aAAa;AACtB,SAAS,eAAe;AACxB,SAAS,aAAa;AACtB,SAAS,WAAW;AA6GpB,MAAM,oBAAoB,YAAoB;AAAA,EAC1C,cAAc;AACV,UAAM,qBAAqB;AAAA,MACvB,EAAE,IAAI,GAAG,MAAM,OAAO,MAAM,WAAW,GAAG,MAAM,IAAI;AAAA,MACpD;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAa,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAClF;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAW,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA,QAAyB,GAAG;AAAA;AAAA,MAAsB;AAAA,MAC1G;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAU,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC/E,EAAE,IAAI,GAAG,MAAM,SAAS,MAAM,WAAW,GAAG,MAAM,MAAM;AAAA,MACxD;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAe,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MACpF;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAuB,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAsB;AAAA,MAC1F,EAAE,IAAI,GAAG,MAAM,YAAY,MAAM,WAAW,GAAG,MAAM,IAAI;AAAA,MACzD,EAAE,IAAI,GAAG,MAAM,WAAW,MAAM,WAAW,GAAG,MAAM,QAAQ;AAAA,MAC5D;AAAA,QAAE,IAAI;AAAA,QAAI,MAAM;AAAA,QAAwB,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC9F;AAAA,QAAE,IAAI;AAAA,QAAI,MAAM;AAAA,QAAkB,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA,QAAyB,GAAG;AAAA;AAAA,MAAsB;AAAA,MAClH,EAAE,IAAI,KAAK,MAAM,QAAQ,MAAM,WAAW,GAAG,MAAM,MAAM;AAAA,MACzD;AAAA,QAAE,IAAI;AAAA,QAAK,MAAM;AAAA,QAAW,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA,QAAyB,GAAG;AAAA;AAAA,MAAsB;AAAA,IAChH,CAAC;AAAA,EACL;AACJ;AAIO,MAAM,SAAS,IAAI,YAAY;AAEtC,MAAM,uBAAuB,YAAuB;AAAA,EAChD,cAAc;AACV,UAAM,wBAAwB;AAAA,MAC1B,EAAE,IAAI,GAAG,MAAM,WAAW,MAAM,WAAW,QAAQ,GAAyB,GAAG,MAAM,OAAO;AAAA,IAChG,CAAC;AAAA,EACL;AACJ;AAIO,MAAM,YAAY,IAAI,eAAe;",
  "names": []
}
