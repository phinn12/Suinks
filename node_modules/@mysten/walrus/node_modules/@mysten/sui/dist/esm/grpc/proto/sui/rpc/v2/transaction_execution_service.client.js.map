{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/transaction_execution_service.client.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/transaction_execution_service.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport type { RpcTransport } from \"@protobuf-ts/runtime-rpc\";\nimport type { ServiceInfo } from \"@protobuf-ts/runtime-rpc\";\nimport { TransactionExecutionService } from \"./transaction_execution_service\";\nimport type { SimulateTransactionResponse } from \"./transaction_execution_service\";\nimport type { SimulateTransactionRequest } from \"./transaction_execution_service\";\nimport { stackIntercept } from \"@protobuf-ts/runtime-rpc\";\nimport type { ExecuteTransactionResponse } from \"./transaction_execution_service\";\nimport type { ExecuteTransactionRequest } from \"./transaction_execution_service\";\nimport type { UnaryCall } from \"@protobuf-ts/runtime-rpc\";\nimport type { RpcOptions } from \"@protobuf-ts/runtime-rpc\";\n/**\n * @generated from protobuf service sui.rpc.v2.TransactionExecutionService\n */\nexport interface ITransactionExecutionServiceClient {\n    /**\n     * @generated from protobuf rpc: ExecuteTransaction(sui.rpc.v2.ExecuteTransactionRequest) returns (sui.rpc.v2.ExecuteTransactionResponse);\n     */\n    executeTransaction(input: ExecuteTransactionRequest, options?: RpcOptions): UnaryCall<ExecuteTransactionRequest, ExecuteTransactionResponse>;\n    /**\n     * @generated from protobuf rpc: SimulateTransaction(sui.rpc.v2.SimulateTransactionRequest) returns (sui.rpc.v2.SimulateTransactionResponse);\n     */\n    simulateTransaction(input: SimulateTransactionRequest, options?: RpcOptions): UnaryCall<SimulateTransactionRequest, SimulateTransactionResponse>;\n}\n/**\n * @generated from protobuf service sui.rpc.v2.TransactionExecutionService\n */\nexport class TransactionExecutionServiceClient implements ITransactionExecutionServiceClient, ServiceInfo {\n    typeName = TransactionExecutionService.typeName;\n    methods = TransactionExecutionService.methods;\n    options = TransactionExecutionService.options;\n    constructor(private readonly _transport: RpcTransport) {\n    }\n    /**\n     * @generated from protobuf rpc: ExecuteTransaction(sui.rpc.v2.ExecuteTransactionRequest) returns (sui.rpc.v2.ExecuteTransactionResponse);\n     */\n    executeTransaction(input: ExecuteTransactionRequest, options?: RpcOptions): UnaryCall<ExecuteTransactionRequest, ExecuteTransactionResponse> {\n        const method = this.methods[0], opt = this._transport.mergeOptions(options);\n        return stackIntercept<ExecuteTransactionRequest, ExecuteTransactionResponse>(\"unary\", this._transport, method, opt, input);\n    }\n    /**\n     * @generated from protobuf rpc: SimulateTransaction(sui.rpc.v2.SimulateTransactionRequest) returns (sui.rpc.v2.SimulateTransactionResponse);\n     */\n    simulateTransaction(input: SimulateTransactionRequest, options?: RpcOptions): UnaryCall<SimulateTransactionRequest, SimulateTransactionResponse> {\n        const method = this.methods[1], opt = this._transport.mergeOptions(options);\n        return stackIntercept<SimulateTransactionRequest, SimulateTransactionResponse>(\"unary\", this._transport, method, opt, input);\n    }\n}\n"],
  "mappings": "AAaA,SAAS,mCAAmC;AAG5C,SAAS,sBAAsB;AAqBxB,MAAM,kCAA6F;AAAA,EAItG,YAA6B,YAA0B;AAA1B;AAH7B,oBAAW,4BAA4B;AACvC,mBAAU,4BAA4B;AACtC,mBAAU,4BAA4B;AAAA,EAEtC;AAAA;AAAA;AAAA;AAAA,EAIA,mBAAmB,OAAkC,SAAwF;AACzI,UAAM,SAAS,KAAK,QAAQ,CAAC,GAAG,MAAM,KAAK,WAAW,aAAa,OAAO;AAC1E,WAAO,eAAsE,SAAS,KAAK,YAAY,QAAQ,KAAK,KAAK;AAAA,EAC7H;AAAA;AAAA;AAAA;AAAA,EAIA,oBAAoB,OAAmC,SAA0F;AAC7I,UAAM,SAAS,KAAK,QAAQ,CAAC,GAAG,MAAM,KAAK,WAAW,aAAa,OAAO;AAC1E,WAAO,eAAwE,SAAS,KAAK,YAAY,QAAQ,KAAK,KAAK;AAAA,EAC/H;AACJ;",
  "names": []
}
