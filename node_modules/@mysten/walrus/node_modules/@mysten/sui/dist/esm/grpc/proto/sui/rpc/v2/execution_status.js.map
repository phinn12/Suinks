{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/execution_status.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/execution_status.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { MessageType } from \"@protobuf-ts/runtime\";\n/**\n * The status of an executed transaction.\n *\n * @generated from protobuf message sui.rpc.v2.ExecutionStatus\n */\nexport interface ExecutionStatus {\n    /**\n     * Indicates if the transaction was successful or not.\n     *\n     * @generated from protobuf field: optional bool success = 1;\n     */\n    success?: boolean;\n    /**\n     * The error if `success` is false.\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.ExecutionError error = 2;\n     */\n    error?: ExecutionError;\n}\n/**\n * An error that can occur during the execution of a transaction.\n *\n * @generated from protobuf message sui.rpc.v2.ExecutionError\n */\nexport interface ExecutionError {\n    /**\n     * A human readable description of the error\n     *\n     * @generated from protobuf field: optional string description = 1;\n     */\n    description?: string;\n    /**\n     * The command, if any, during which the error occurred.\n     *\n     * @generated from protobuf field: optional uint64 command = 2;\n     */\n    command?: bigint;\n    /**\n     * @generated from protobuf field: optional sui.rpc.v2.ExecutionError.ExecutionErrorKind kind = 3;\n     */\n    kind?: ExecutionError_ExecutionErrorKind;\n    /**\n     * @generated from protobuf oneof: error_details\n     */\n    errorDetails: {\n        oneofKind: \"abort\";\n        /**\n         * @generated from protobuf field: sui.rpc.v2.MoveAbort abort = 4;\n         */\n        abort: MoveAbort;\n    } | {\n        oneofKind: \"sizeError\";\n        /**\n         * @generated from protobuf field: sui.rpc.v2.SizeError size_error = 5;\n         */\n        sizeError: SizeError;\n    } | {\n        oneofKind: \"commandArgumentError\";\n        /**\n         * @generated from protobuf field: sui.rpc.v2.CommandArgumentError command_argument_error = 6;\n         */\n        commandArgumentError: CommandArgumentError;\n    } | {\n        oneofKind: \"typeArgumentError\";\n        /**\n         * @generated from protobuf field: sui.rpc.v2.TypeArgumentError type_argument_error = 7;\n         */\n        typeArgumentError: TypeArgumentError;\n    } | {\n        oneofKind: \"packageUpgradeError\";\n        /**\n         * @generated from protobuf field: sui.rpc.v2.PackageUpgradeError package_upgrade_error = 8;\n         */\n        packageUpgradeError: PackageUpgradeError;\n    } | {\n        oneofKind: \"indexError\";\n        /**\n         * @generated from protobuf field: sui.rpc.v2.IndexError index_error = 9;\n         */\n        indexError: IndexError;\n    } | {\n        oneofKind: \"objectId\";\n        /**\n         * @generated from protobuf field: string object_id = 10;\n         */\n        objectId: string;\n    } | {\n        oneofKind: \"coinDenyListError\";\n        /**\n         * @generated from protobuf field: sui.rpc.v2.CoinDenyListError coin_deny_list_error = 11;\n         */\n        coinDenyListError: CoinDenyListError;\n    } | {\n        oneofKind: \"congestedObjects\";\n        /**\n         * Set of objects that were congested, leading to the transaction's cancellation.\n         *\n         * @generated from protobuf field: sui.rpc.v2.CongestedObjects congested_objects = 12;\n         */\n        congestedObjects: CongestedObjects;\n    } | {\n        oneofKind: undefined;\n    };\n}\n/**\n * @generated from protobuf enum sui.rpc.v2.ExecutionError.ExecutionErrorKind\n */\nexport enum ExecutionError_ExecutionErrorKind {\n    /**\n     * @generated from protobuf enum value: EXECUTION_ERROR_KIND_UNKNOWN = 0;\n     */\n    EXECUTION_ERROR_KIND_UNKNOWN = 0,\n    /**\n     * Insufficient gas.\n     *\n     * @generated from protobuf enum value: INSUFFICIENT_GAS = 1;\n     */\n    INSUFFICIENT_GAS = 1,\n    /**\n     * Invalid `Gas` object.\n     *\n     * @generated from protobuf enum value: INVALID_GAS_OBJECT = 2;\n     */\n    INVALID_GAS_OBJECT = 2,\n    /**\n     * Invariant violation.\n     *\n     * @generated from protobuf enum value: INVARIANT_VIOLATION = 3;\n     */\n    INVARIANT_VIOLATION = 3,\n    /**\n     * Attempted to use feature that is not supported yet.\n     *\n     * @generated from protobuf enum value: FEATURE_NOT_YET_SUPPORTED = 4;\n     */\n    FEATURE_NOT_YET_SUPPORTED = 4,\n    /**\n     * Move object is larger than the maximum allowed size.\n     *\n     * @generated from protobuf enum value: OBJECT_TOO_BIG = 5;\n     */\n    OBJECT_TOO_BIG = 5,\n    /**\n     * Package is larger than the maximum allowed size.\n     *\n     * @generated from protobuf enum value: PACKAGE_TOO_BIG = 6;\n     */\n    PACKAGE_TOO_BIG = 6,\n    /**\n     * Circular object ownership.\n     *\n     * @generated from protobuf enum value: CIRCULAR_OBJECT_OWNERSHIP = 7;\n     */\n    CIRCULAR_OBJECT_OWNERSHIP = 7,\n    /**\n     * Insufficient coin balance for requested operation.\n     *\n     * @generated from protobuf enum value: INSUFFICIENT_COIN_BALANCE = 8;\n     */\n    INSUFFICIENT_COIN_BALANCE = 8,\n    /**\n     * Coin balance overflowed an u64.\n     *\n     * @generated from protobuf enum value: COIN_BALANCE_OVERFLOW = 9;\n     */\n    COIN_BALANCE_OVERFLOW = 9,\n    /**\n     * Publish error, non-zero address.\n     * The modules in the package must have their self-addresses set to zero.\n     *\n     * @generated from protobuf enum value: PUBLISH_ERROR_NON_ZERO_ADDRESS = 10;\n     */\n    PUBLISH_ERROR_NON_ZERO_ADDRESS = 10,\n    /**\n     * Sui Move bytecode verification error.\n     *\n     * @generated from protobuf enum value: SUI_MOVE_VERIFICATION_ERROR = 11;\n     */\n    SUI_MOVE_VERIFICATION_ERROR = 11,\n    /**\n     * Error from a non-abort instruction.\n     * Possible causes:\n     *     Arithmetic error, stack overflow, max value depth, or similar.\n     *\n     * @generated from protobuf enum value: MOVE_PRIMITIVE_RUNTIME_ERROR = 12;\n     */\n    MOVE_PRIMITIVE_RUNTIME_ERROR = 12,\n    /**\n     * Move runtime abort.\n     *\n     * @generated from protobuf enum value: MOVE_ABORT = 13;\n     */\n    MOVE_ABORT = 13,\n    /**\n     * Bytecode verification error.\n     *\n     * @generated from protobuf enum value: VM_VERIFICATION_OR_DESERIALIZATION_ERROR = 14;\n     */\n    VM_VERIFICATION_OR_DESERIALIZATION_ERROR = 14,\n    /**\n     * MoveVm invariant violation.\n     *\n     * @generated from protobuf enum value: VM_INVARIANT_VIOLATION = 15;\n     */\n    VM_INVARIANT_VIOLATION = 15,\n    /**\n     * Function not found.\n     *\n     * @generated from protobuf enum value: FUNCTION_NOT_FOUND = 16;\n     */\n    FUNCTION_NOT_FOUND = 16,\n    /**\n     * Parity mismatch for Move function.\n     * The number of arguments does not match the number of parameters.\n     *\n     * @generated from protobuf enum value: ARITY_MISMATCH = 17;\n     */\n    ARITY_MISMATCH = 17,\n    /**\n     * Type parity mismatch for Move function.\n     * Mismatch between the number of actual versus expected type arguments.\n     *\n     * @generated from protobuf enum value: TYPE_ARITY_MISMATCH = 18;\n     */\n    TYPE_ARITY_MISMATCH = 18,\n    /**\n     * Non-entry function invoked. Move Call must start with an entry function.\n     *\n     * @generated from protobuf enum value: NON_ENTRY_FUNCTION_INVOKED = 19;\n     */\n    NON_ENTRY_FUNCTION_INVOKED = 19,\n    /**\n     * Invalid command argument.\n     *\n     * @generated from protobuf enum value: COMMAND_ARGUMENT_ERROR = 20;\n     */\n    COMMAND_ARGUMENT_ERROR = 20,\n    /**\n     * Type argument error.\n     *\n     * @generated from protobuf enum value: TYPE_ARGUMENT_ERROR = 21;\n     */\n    TYPE_ARGUMENT_ERROR = 21,\n    /**\n     * Unused result without the drop ability.\n     *\n     * @generated from protobuf enum value: UNUSED_VALUE_WITHOUT_DROP = 22;\n     */\n    UNUSED_VALUE_WITHOUT_DROP = 22,\n    /**\n     * Invalid public Move function signature.\n     * Unsupported return type for return value.\n     *\n     * @generated from protobuf enum value: INVALID_PUBLIC_FUNCTION_RETURN_TYPE = 23;\n     */\n    INVALID_PUBLIC_FUNCTION_RETURN_TYPE = 23,\n    /**\n     * Invalid transfer object, object does not have public transfer.\n     *\n     * @generated from protobuf enum value: INVALID_TRANSFER_OBJECT = 24;\n     */\n    INVALID_TRANSFER_OBJECT = 24,\n    /**\n     * Effects from the transaction are too large.\n     *\n     * @generated from protobuf enum value: EFFECTS_TOO_LARGE = 25;\n     */\n    EFFECTS_TOO_LARGE = 25,\n    /**\n     * Publish or Upgrade is missing dependency.\n     *\n     * @generated from protobuf enum value: PUBLISH_UPGRADE_MISSING_DEPENDENCY = 26;\n     */\n    PUBLISH_UPGRADE_MISSING_DEPENDENCY = 26,\n    /**\n     * Publish or upgrade dependency downgrade.\n     *\n     * Indirect (transitive) dependency of published or upgraded package has been assigned an\n     * on-chain version that is less than the version required by one of the package's\n     * transitive dependencies.\n     *\n     * @generated from protobuf enum value: PUBLISH_UPGRADE_DEPENDENCY_DOWNGRADE = 27;\n     */\n    PUBLISH_UPGRADE_DEPENDENCY_DOWNGRADE = 27,\n    /**\n     * Invalid package upgrade.\n     *\n     * @generated from protobuf enum value: PACKAGE_UPGRADE_ERROR = 28;\n     */\n    PACKAGE_UPGRADE_ERROR = 28,\n    /**\n     * Indicates the transaction tried to write objects too large to storage.\n     *\n     * @generated from protobuf enum value: WRITTEN_OBJECTS_TOO_LARGE = 29;\n     */\n    WRITTEN_OBJECTS_TOO_LARGE = 29,\n    /**\n     * Certificate is on the deny list.\n     *\n     * @generated from protobuf enum value: CERTIFICATE_DENIED = 30;\n     */\n    CERTIFICATE_DENIED = 30,\n    /**\n     * Sui Move bytecode verification timed out.\n     *\n     * @generated from protobuf enum value: SUI_MOVE_VERIFICATION_TIMEDOUT = 31;\n     */\n    SUI_MOVE_VERIFICATION_TIMEDOUT = 31,\n    /**\n     * The requested consensus object operation is not allowed.\n     *\n     * @generated from protobuf enum value: CONSENSUS_OBJECT_OPERATION_NOT_ALLOWED = 32;\n     */\n    CONSENSUS_OBJECT_OPERATION_NOT_ALLOWED = 32,\n    /**\n     * Requested consensus object has been deleted.\n     *\n     * @generated from protobuf enum value: INPUT_OBJECT_DELETED = 33;\n     */\n    INPUT_OBJECT_DELETED = 33,\n    /**\n     * Certificate is canceled due to congestion on consensus objects.\n     *\n     * @generated from protobuf enum value: EXECUTION_CANCELED_DUE_TO_CONSENSUS_OBJECT_CONGESTION = 34;\n     */\n    EXECUTION_CANCELED_DUE_TO_CONSENSUS_OBJECT_CONGESTION = 34,\n    /**\n     * Address is denied for this coin type.\n     *\n     * @generated from protobuf enum value: ADDRESS_DENIED_FOR_COIN = 35;\n     */\n    ADDRESS_DENIED_FOR_COIN = 35,\n    /**\n     * Coin type is globally paused for use.\n     *\n     * @generated from protobuf enum value: COIN_TYPE_GLOBAL_PAUSE = 36;\n     */\n    COIN_TYPE_GLOBAL_PAUSE = 36,\n    /**\n     * Certificate is canceled because randomness could not be generated this epoch.\n     *\n     * @generated from protobuf enum value: EXECUTION_CANCELED_DUE_TO_RANDOMNESS_UNAVAILABLE = 37;\n     */\n    EXECUTION_CANCELED_DUE_TO_RANDOMNESS_UNAVAILABLE = 37,\n    /**\n     * @generated from protobuf enum value: MOVE_VECTOR_ELEM_TOO_BIG = 38;\n     */\n    MOVE_VECTOR_ELEM_TOO_BIG = 38,\n    /**\n     * @generated from protobuf enum value: MOVE_RAW_VALUE_TOO_BIG = 39;\n     */\n    MOVE_RAW_VALUE_TOO_BIG = 39,\n    /**\n     * @generated from protobuf enum value: INVALID_LINKAGE = 40;\n     */\n    INVALID_LINKAGE = 40\n}\n/**\n * @generated from protobuf message sui.rpc.v2.MoveAbort\n */\nexport interface MoveAbort {\n    /**\n     * @generated from protobuf field: optional uint64 abort_code = 1;\n     */\n    abortCode?: bigint;\n    /**\n     * Location in Move where the error occurred.\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.MoveLocation location = 2;\n     */\n    location?: MoveLocation;\n    /**\n     * Extra error information if abort code is a \"Clever Error\"\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.CleverError clever_error = 3;\n     */\n    cleverError?: CleverError;\n}\n/**\n * Location in Move bytecode where an error occurred.\n *\n * @generated from protobuf message sui.rpc.v2.MoveLocation\n */\nexport interface MoveLocation {\n    /**\n     * The package ID.\n     *\n     * @generated from protobuf field: optional string package = 1;\n     */\n    package?: string;\n    /**\n     * The module name.\n     *\n     * @generated from protobuf field: optional string module = 2;\n     */\n    module?: string;\n    /**\n     * The function index.\n     *\n     * @generated from protobuf field: optional uint32 function = 3;\n     */\n    function?: number;\n    /**\n     * Offset of the instruction where the error occurred.\n     *\n     * @generated from protobuf field: optional uint32 instruction = 4;\n     */\n    instruction?: number;\n    /**\n     * The name of the function, if available.\n     *\n     * @generated from protobuf field: optional string function_name = 5;\n     */\n    functionName?: string;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.CleverError\n */\nexport interface CleverError {\n    /**\n     * @generated from protobuf field: optional uint64 error_code = 1;\n     */\n    errorCode?: bigint;\n    /**\n     * @generated from protobuf field: optional uint64 line_number = 2;\n     */\n    lineNumber?: bigint;\n    /**\n     * @generated from protobuf field: optional string constant_name = 3;\n     */\n    constantName?: string;\n    /**\n     * @generated from protobuf field: optional string constant_type = 4;\n     */\n    constantType?: string;\n    /**\n     * @generated from protobuf oneof: value\n     */\n    value: {\n        oneofKind: \"rendered\";\n        /**\n         * @generated from protobuf field: string rendered = 5;\n         */\n        rendered: string;\n    } | {\n        oneofKind: \"raw\";\n        /**\n         * @generated from protobuf field: bytes raw = 6;\n         */\n        raw: Uint8Array;\n    } | {\n        oneofKind: undefined;\n    };\n}\n/**\n * A size error.\n *\n * @generated from protobuf message sui.rpc.v2.SizeError\n */\nexport interface SizeError {\n    /**\n     * The offending size.\n     *\n     * @generated from protobuf field: optional uint64 size = 1;\n     */\n    size?: bigint;\n    /**\n     * The maximum allowable size.\n     *\n     * @generated from protobuf field: optional uint64 max_size = 2;\n     */\n    maxSize?: bigint;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.IndexError\n */\nexport interface IndexError {\n    /**\n     * Index of an input or result.\n     *\n     * @generated from protobuf field: optional uint32 index = 1;\n     */\n    index?: number;\n    /**\n     * Index of a subresult.\n     *\n     * @generated from protobuf field: optional uint32 subresult = 2;\n     */\n    subresult?: number;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.CoinDenyListError\n */\nexport interface CoinDenyListError {\n    /**\n     * Denied address.\n     *\n     * @generated from protobuf field: optional string address = 1;\n     */\n    address?: string;\n    /**\n     * Coin type.\n     *\n     * @generated from protobuf field: optional string coin_type = 2;\n     */\n    coinType?: string;\n}\n/**\n * Set of objects that were congested, leading to the transaction's cancellation.\n *\n * @generated from protobuf message sui.rpc.v2.CongestedObjects\n */\nexport interface CongestedObjects {\n    /**\n     * @generated from protobuf field: repeated string objects = 1;\n     */\n    objects: string[];\n}\n/**\n * An error with an argument to a command.\n *\n * @generated from protobuf message sui.rpc.v2.CommandArgumentError\n */\nexport interface CommandArgumentError {\n    /**\n     * Position of the problematic argument.\n     *\n     * @generated from protobuf field: optional uint32 argument = 1;\n     */\n    argument?: number;\n    /**\n     * @generated from protobuf field: optional sui.rpc.v2.CommandArgumentError.CommandArgumentErrorKind kind = 2;\n     */\n    kind?: CommandArgumentError_CommandArgumentErrorKind;\n    /**\n     * @generated from protobuf field: optional sui.rpc.v2.IndexError index_error = 3;\n     */\n    indexError?: IndexError;\n}\n/**\n * @generated from protobuf enum sui.rpc.v2.CommandArgumentError.CommandArgumentErrorKind\n */\nexport enum CommandArgumentError_CommandArgumentErrorKind {\n    /**\n     * @generated from protobuf enum value: COMMAND_ARGUMENT_ERROR_KIND_UNKNOWN = 0;\n     */\n    COMMAND_ARGUMENT_ERROR_KIND_UNKNOWN = 0,\n    /**\n     * The type of the value does not match the expected type.\n     *\n     * @generated from protobuf enum value: TYPE_MISMATCH = 1;\n     */\n    TYPE_MISMATCH = 1,\n    /**\n     * The argument cannot be deserialized into a value of the specified type.\n     *\n     * @generated from protobuf enum value: INVALID_BCS_BYTES = 2;\n     */\n    INVALID_BCS_BYTES = 2,\n    /**\n     * The argument cannot be instantiated from raw bytes.\n     *\n     * @generated from protobuf enum value: INVALID_USAGE_OF_PURE_ARGUMENT = 3;\n     */\n    INVALID_USAGE_OF_PURE_ARGUMENT = 3,\n    /**\n     * Invalid argument to private entry function.\n     * Private entry functions cannot take arguments from other Move functions.\n     *\n     * @generated from protobuf enum value: INVALID_ARGUMENT_TO_PRIVATE_ENTRY_FUNCTION = 4;\n     */\n    INVALID_ARGUMENT_TO_PRIVATE_ENTRY_FUNCTION = 4,\n    /**\n     * Out of bounds access to input or results.\n     *\n     * `index` field will be set indicating the invalid index value.\n     *\n     * @generated from protobuf enum value: INDEX_OUT_OF_BOUNDS = 5;\n     */\n    INDEX_OUT_OF_BOUNDS = 5,\n    /**\n     * Out of bounds access to subresult.\n     *\n     * `index` and `subresult` fields will be set indicating the invalid index value.\n     *\n     * @generated from protobuf enum value: SECONDARY_INDEX_OUT_OF_BOUNDS = 6;\n     */\n    SECONDARY_INDEX_OUT_OF_BOUNDS = 6,\n    /**\n     * Invalid usage of result.\n     * Expected a single result but found either no return value or multiple.\n     * `index` field will be set indicating the invalid index value.\n     *\n     * @generated from protobuf enum value: INVALID_RESULT_ARITY = 7;\n     */\n    INVALID_RESULT_ARITY = 7,\n    /**\n     * Invalid usage of gas coin.\n     * The gas coin can only be used by-value with a `TransferObject` command.\n     *\n     * @generated from protobuf enum value: INVALID_GAS_COIN_USAGE = 8;\n     */\n    INVALID_GAS_COIN_USAGE = 8,\n    /**\n     * Invalid usage of Move value.\n     *    - Mutably borrowed values require unique usage.\n     *    - Immutably borrowed values cannot be taken or borrowed mutably.\n     *    - Taken values cannot be used again.\n     *\n     * @generated from protobuf enum value: INVALID_VALUE_USAGE = 9;\n     */\n    INVALID_VALUE_USAGE = 9,\n    /**\n     * Immutable objects cannot be passed by-value.\n     *\n     * @generated from protobuf enum value: INVALID_OBJECT_BY_VALUE = 10;\n     */\n    INVALID_OBJECT_BY_VALUE = 10,\n    /**\n     * Immutable objects cannot be passed by mutable reference, `&mut`.\n     *\n     * @generated from protobuf enum value: INVALID_OBJECT_BY_MUT_REF = 11;\n     */\n    INVALID_OBJECT_BY_MUT_REF = 11,\n    /**\n     * Consensus object operations such as wrapping, freezing, or converting to owned are not\n     * allowed.\n     *\n     * @generated from protobuf enum value: CONSENSUS_OBJECT_OPERATION_NOT_ALLOWED = 12;\n     */\n    CONSENSUS_OBJECT_OPERATION_NOT_ALLOWED = 12,\n    /**\n     * Invalid argument arity. Expected a single argument but found a result that expanded to\n     * multiple arguments.\n     *\n     * @generated from protobuf enum value: INVALID_ARGUMENT_ARITY = 13;\n     */\n    INVALID_ARGUMENT_ARITY = 13\n}\n/**\n * An error with upgrading a package.\n *\n * @generated from protobuf message sui.rpc.v2.PackageUpgradeError\n */\nexport interface PackageUpgradeError {\n    /**\n     * @generated from protobuf field: optional sui.rpc.v2.PackageUpgradeError.PackageUpgradeErrorKind kind = 1;\n     */\n    kind?: PackageUpgradeError_PackageUpgradeErrorKind;\n    /**\n     * The Package Id.\n     *\n     * @generated from protobuf field: optional string package_id = 2;\n     */\n    packageId?: string;\n    /**\n     * A digest.\n     *\n     * @generated from protobuf field: optional string digest = 3;\n     */\n    digest?: string;\n    /**\n     * The policy.\n     *\n     * @generated from protobuf field: optional uint32 policy = 4;\n     */\n    policy?: number;\n    /**\n     * The ticket Id.\n     *\n     * @generated from protobuf field: optional string ticket_id = 5;\n     */\n    ticketId?: string;\n}\n/**\n * @generated from protobuf enum sui.rpc.v2.PackageUpgradeError.PackageUpgradeErrorKind\n */\nexport enum PackageUpgradeError_PackageUpgradeErrorKind {\n    /**\n     * @generated from protobuf enum value: PACKAGE_UPGRADE_ERROR_KIND_UNKNOWN = 0;\n     */\n    PACKAGE_UPGRADE_ERROR_KIND_UNKNOWN = 0,\n    /**\n     * Unable to fetch package.\n     *\n     * @generated from protobuf enum value: UNABLE_TO_FETCH_PACKAGE = 1;\n     */\n    UNABLE_TO_FETCH_PACKAGE = 1,\n    /**\n     * Object is not a package.\n     *\n     * @generated from protobuf enum value: NOT_A_PACKAGE = 2;\n     */\n    NOT_A_PACKAGE = 2,\n    /**\n     * Package upgrade is incompatible with previous version.\n     *\n     * @generated from protobuf enum value: INCOMPATIBLE_UPGRADE = 3;\n     */\n    INCOMPATIBLE_UPGRADE = 3,\n    /**\n     * Digest in upgrade ticket and computed digest differ.\n     *\n     * @generated from protobuf enum value: DIGEST_DOES_NOT_MATCH = 4;\n     */\n    DIGEST_DOES_NOT_MATCH = 4,\n    /**\n     * Upgrade policy is not valid.\n     *\n     * @generated from protobuf enum value: UNKNOWN_UPGRADE_POLICY = 5;\n     */\n    UNKNOWN_UPGRADE_POLICY = 5,\n    /**\n     * Package ID does not match `PackageId` in upgrade ticket.\n     *\n     * @generated from protobuf enum value: PACKAGE_ID_DOES_NOT_MATCH = 6;\n     */\n    PACKAGE_ID_DOES_NOT_MATCH = 6\n}\n/**\n * Type argument error.\n *\n * @generated from protobuf message sui.rpc.v2.TypeArgumentError\n */\nexport interface TypeArgumentError {\n    /**\n     * Index of the problematic type argument.\n     *\n     * @generated from protobuf field: optional uint32 type_argument = 1;\n     */\n    typeArgument?: number;\n    /**\n     * @generated from protobuf field: optional sui.rpc.v2.TypeArgumentError.TypeArgumentErrorKind kind = 2;\n     */\n    kind?: TypeArgumentError_TypeArgumentErrorKind;\n}\n/**\n * @generated from protobuf enum sui.rpc.v2.TypeArgumentError.TypeArgumentErrorKind\n */\nexport enum TypeArgumentError_TypeArgumentErrorKind {\n    /**\n     * @generated from protobuf enum value: TYPE_ARGUMENT_ERROR_KIND_UNKNOWN = 0;\n     */\n    TYPE_ARGUMENT_ERROR_KIND_UNKNOWN = 0,\n    /**\n     * A type was not found in the module specified.\n     *\n     * @generated from protobuf enum value: TYPE_NOT_FOUND = 1;\n     */\n    TYPE_NOT_FOUND = 1,\n    /**\n     * A type provided did not match the specified constraint.\n     *\n     * @generated from protobuf enum value: CONSTRAINT_NOT_SATISFIED = 2;\n     */\n    CONSTRAINT_NOT_SATISFIED = 2\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass ExecutionStatus$Type extends MessageType<ExecutionStatus> {\n    constructor() {\n        super(\"sui.rpc.v2.ExecutionStatus\", [\n            { no: 1, name: \"success\", kind: \"scalar\", opt: true, T: 8 /*ScalarType.BOOL*/ },\n            { no: 2, name: \"error\", kind: \"message\", T: () => ExecutionError }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ExecutionStatus\n */\nexport const ExecutionStatus = new ExecutionStatus$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ExecutionError$Type extends MessageType<ExecutionError> {\n    constructor() {\n        super(\"sui.rpc.v2.ExecutionError\", [\n            { no: 1, name: \"description\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"command\", kind: \"scalar\", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },\n            { no: 3, name: \"kind\", kind: \"enum\", opt: true, T: () => [\"sui.rpc.v2.ExecutionError.ExecutionErrorKind\", ExecutionError_ExecutionErrorKind] },\n            { no: 4, name: \"abort\", kind: \"message\", oneof: \"errorDetails\", T: () => MoveAbort },\n            { no: 5, name: \"size_error\", kind: \"message\", oneof: \"errorDetails\", T: () => SizeError },\n            { no: 6, name: \"command_argument_error\", kind: \"message\", oneof: \"errorDetails\", T: () => CommandArgumentError },\n            { no: 7, name: \"type_argument_error\", kind: \"message\", oneof: \"errorDetails\", T: () => TypeArgumentError },\n            { no: 8, name: \"package_upgrade_error\", kind: \"message\", oneof: \"errorDetails\", T: () => PackageUpgradeError },\n            { no: 9, name: \"index_error\", kind: \"message\", oneof: \"errorDetails\", T: () => IndexError },\n            { no: 10, name: \"object_id\", kind: \"scalar\", oneof: \"errorDetails\", T: 9 /*ScalarType.STRING*/ },\n            { no: 11, name: \"coin_deny_list_error\", kind: \"message\", oneof: \"errorDetails\", T: () => CoinDenyListError },\n            { no: 12, name: \"congested_objects\", kind: \"message\", oneof: \"errorDetails\", T: () => CongestedObjects }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ExecutionError\n */\nexport const ExecutionError = new ExecutionError$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass MoveAbort$Type extends MessageType<MoveAbort> {\n    constructor() {\n        super(\"sui.rpc.v2.MoveAbort\", [\n            { no: 1, name: \"abort_code\", kind: \"scalar\", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },\n            { no: 2, name: \"location\", kind: \"message\", T: () => MoveLocation },\n            { no: 3, name: \"clever_error\", kind: \"message\", T: () => CleverError }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.MoveAbort\n */\nexport const MoveAbort = new MoveAbort$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass MoveLocation$Type extends MessageType<MoveLocation> {\n    constructor() {\n        super(\"sui.rpc.v2.MoveLocation\", [\n            { no: 1, name: \"package\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"module\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"function\", kind: \"scalar\", opt: true, T: 13 /*ScalarType.UINT32*/ },\n            { no: 4, name: \"instruction\", kind: \"scalar\", opt: true, T: 13 /*ScalarType.UINT32*/ },\n            { no: 5, name: \"function_name\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.MoveLocation\n */\nexport const MoveLocation = new MoveLocation$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CleverError$Type extends MessageType<CleverError> {\n    constructor() {\n        super(\"sui.rpc.v2.CleverError\", [\n            { no: 1, name: \"error_code\", kind: \"scalar\", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },\n            { no: 2, name: \"line_number\", kind: \"scalar\", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },\n            { no: 3, name: \"constant_name\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 4, name: \"constant_type\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 5, name: \"rendered\", kind: \"scalar\", oneof: \"value\", T: 9 /*ScalarType.STRING*/ },\n            { no: 6, name: \"raw\", kind: \"scalar\", oneof: \"value\", T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.CleverError\n */\nexport const CleverError = new CleverError$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass SizeError$Type extends MessageType<SizeError> {\n    constructor() {\n        super(\"sui.rpc.v2.SizeError\", [\n            { no: 1, name: \"size\", kind: \"scalar\", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },\n            { no: 2, name: \"max_size\", kind: \"scalar\", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.SizeError\n */\nexport const SizeError = new SizeError$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass IndexError$Type extends MessageType<IndexError> {\n    constructor() {\n        super(\"sui.rpc.v2.IndexError\", [\n            { no: 1, name: \"index\", kind: \"scalar\", opt: true, T: 13 /*ScalarType.UINT32*/ },\n            { no: 2, name: \"subresult\", kind: \"scalar\", opt: true, T: 13 /*ScalarType.UINT32*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.IndexError\n */\nexport const IndexError = new IndexError$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CoinDenyListError$Type extends MessageType<CoinDenyListError> {\n    constructor() {\n        super(\"sui.rpc.v2.CoinDenyListError\", [\n            { no: 1, name: \"address\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"coin_type\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.CoinDenyListError\n */\nexport const CoinDenyListError = new CoinDenyListError$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CongestedObjects$Type extends MessageType<CongestedObjects> {\n    constructor() {\n        super(\"sui.rpc.v2.CongestedObjects\", [\n            { no: 1, name: \"objects\", kind: \"scalar\", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.CongestedObjects\n */\nexport const CongestedObjects = new CongestedObjects$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CommandArgumentError$Type extends MessageType<CommandArgumentError> {\n    constructor() {\n        super(\"sui.rpc.v2.CommandArgumentError\", [\n            { no: 1, name: \"argument\", kind: \"scalar\", opt: true, T: 13 /*ScalarType.UINT32*/ },\n            { no: 2, name: \"kind\", kind: \"enum\", opt: true, T: () => [\"sui.rpc.v2.CommandArgumentError.CommandArgumentErrorKind\", CommandArgumentError_CommandArgumentErrorKind] },\n            { no: 3, name: \"index_error\", kind: \"message\", T: () => IndexError }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.CommandArgumentError\n */\nexport const CommandArgumentError = new CommandArgumentError$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass PackageUpgradeError$Type extends MessageType<PackageUpgradeError> {\n    constructor() {\n        super(\"sui.rpc.v2.PackageUpgradeError\", [\n            { no: 1, name: \"kind\", kind: \"enum\", opt: true, T: () => [\"sui.rpc.v2.PackageUpgradeError.PackageUpgradeErrorKind\", PackageUpgradeError_PackageUpgradeErrorKind] },\n            { no: 2, name: \"package_id\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"digest\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 4, name: \"policy\", kind: \"scalar\", opt: true, T: 13 /*ScalarType.UINT32*/ },\n            { no: 5, name: \"ticket_id\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.PackageUpgradeError\n */\nexport const PackageUpgradeError = new PackageUpgradeError$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass TypeArgumentError$Type extends MessageType<TypeArgumentError> {\n    constructor() {\n        super(\"sui.rpc.v2.TypeArgumentError\", [\n            { no: 1, name: \"type_argument\", kind: \"scalar\", opt: true, T: 13 /*ScalarType.UINT32*/ },\n            { no: 2, name: \"kind\", kind: \"enum\", opt: true, T: () => [\"sui.rpc.v2.TypeArgumentError.TypeArgumentErrorKind\", TypeArgumentError_TypeArgumentErrorKind] }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.TypeArgumentError\n */\nexport const TypeArgumentError = new TypeArgumentError$Type();\n"],
  "mappings": "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",
  "names": ["ExecutionError_ExecutionErrorKind", "CommandArgumentError_CommandArgumentErrorKind", "PackageUpgradeError_PackageUpgradeErrorKind", "TypeArgumentError_TypeArgumentErrorKind"]
}
