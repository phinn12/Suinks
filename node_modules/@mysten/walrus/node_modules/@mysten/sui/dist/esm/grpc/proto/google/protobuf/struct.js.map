{
  "version": 3,
  "sources": ["../../../../../../src/grpc/proto/google/protobuf/struct.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"google/protobuf/struct.proto\" (package \"google.protobuf\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Protocol Buffers - Google's data interchange format\n// Copyright 2008 Google Inc.  All rights reserved.\n// https://developers.google.com/protocol-buffers/\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//     * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//     * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\nimport { isJsonObject } from \"@protobuf-ts/runtime\";\nimport { typeofJsonValue } from \"@protobuf-ts/runtime\";\nimport type { JsonValue } from \"@protobuf-ts/runtime\";\nimport type { JsonReadOptions } from \"@protobuf-ts/runtime\";\nimport type { JsonWriteOptions } from \"@protobuf-ts/runtime\";\nimport type { JsonObject } from \"@protobuf-ts/runtime\";\nimport { MessageType } from \"@protobuf-ts/runtime\";\n/**\n * `Struct` represents a structured data value, consisting of fields\n * which map to dynamically typed values. In some languages, `Struct`\n * might be supported by a native representation. For example, in\n * scripting languages like JS a struct is represented as an\n * object. The details of that representation are described together\n * with the proto support for the language.\n *\n * The JSON representation for `Struct` is JSON object.\n *\n * @generated from protobuf message google.protobuf.Struct\n */\nexport interface Struct {\n    /**\n     * Unordered map of dynamically typed values.\n     *\n     * @generated from protobuf field: map<string, google.protobuf.Value> fields = 1;\n     */\n    fields: {\n        [key: string]: Value;\n    };\n}\n/**\n * `Value` represents a dynamically typed value which can be either\n * null, a number, a string, a boolean, a recursive struct value, or a\n * list of values. A producer of value is expected to set one of these\n * variants. Absence of any variant indicates an error.\n *\n * The JSON representation for `Value` is JSON value.\n *\n * @generated from protobuf message google.protobuf.Value\n */\nexport interface Value {\n    /**\n     * @generated from protobuf oneof: kind\n     */\n    kind: {\n        oneofKind: \"nullValue\";\n        /**\n         * Represents a null value.\n         *\n         * @generated from protobuf field: google.protobuf.NullValue null_value = 1;\n         */\n        nullValue: NullValue;\n    } | {\n        oneofKind: \"numberValue\";\n        /**\n         * Represents a double value.\n         *\n         * @generated from protobuf field: double number_value = 2;\n         */\n        numberValue: number;\n    } | {\n        oneofKind: \"stringValue\";\n        /**\n         * Represents a string value.\n         *\n         * @generated from protobuf field: string string_value = 3;\n         */\n        stringValue: string;\n    } | {\n        oneofKind: \"boolValue\";\n        /**\n         * Represents a boolean value.\n         *\n         * @generated from protobuf field: bool bool_value = 4;\n         */\n        boolValue: boolean;\n    } | {\n        oneofKind: \"structValue\";\n        /**\n         * Represents a structured value.\n         *\n         * @generated from protobuf field: google.protobuf.Struct struct_value = 5;\n         */\n        structValue: Struct;\n    } | {\n        oneofKind: \"listValue\";\n        /**\n         * Represents a repeated `Value`.\n         *\n         * @generated from protobuf field: google.protobuf.ListValue list_value = 6;\n         */\n        listValue: ListValue;\n    } | {\n        oneofKind: undefined;\n    };\n}\n/**\n * `ListValue` is a wrapper around a repeated field of values.\n *\n * The JSON representation for `ListValue` is JSON array.\n *\n * @generated from protobuf message google.protobuf.ListValue\n */\nexport interface ListValue {\n    /**\n     * Repeated field of dynamically typed values.\n     *\n     * @generated from protobuf field: repeated google.protobuf.Value values = 1;\n     */\n    values: Value[];\n}\n/**\n * `NullValue` is a singleton enumeration to represent the null value for the\n * `Value` type union.\n *\n * The JSON representation for `NullValue` is JSON `null`.\n *\n * @generated from protobuf enum google.protobuf.NullValue\n */\nexport enum NullValue {\n    /**\n     * Null value.\n     *\n     * @generated from protobuf enum value: NULL_VALUE = 0;\n     */\n    NULL_VALUE = 0\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass Struct$Type extends MessageType<Struct> {\n    constructor() {\n        super(\"google.protobuf.Struct\", [\n            { no: 1, name: \"fields\", kind: \"map\", K: 9 /*ScalarType.STRING*/, V: { kind: \"message\", T: () => Value } }\n        ]);\n    }\n    /**\n     * Encode `Struct` to JSON object.\n     */\n    internalJsonWrite(message: Struct, options: JsonWriteOptions): JsonValue {\n        let json: JsonObject = {};\n        for (let [k, v] of Object.entries(message.fields)) {\n            json[k] = Value.toJson(v);\n        }\n        return json;\n    }\n    /**\n     * Decode `Struct` from JSON object.\n     */\n    internalJsonRead(json: JsonValue, options: JsonReadOptions, target?: Struct): Struct {\n        if (!isJsonObject(json))\n            throw new globalThis.Error(\"Unable to parse message \" + this.typeName + \" from JSON \" + typeofJsonValue(json) + \".\");\n        if (!target)\n            target = this.create();\n        for (let [k, v] of globalThis.Object.entries(json)) {\n            target.fields[k] = Value.fromJson(v);\n        }\n        return target;\n    }\n}\n/**\n * @generated MessageType for protobuf message google.protobuf.Struct\n */\nexport const Struct = new Struct$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Value$Type extends MessageType<Value> {\n    constructor() {\n        super(\"google.protobuf.Value\", [\n            { no: 1, name: \"null_value\", kind: \"enum\", oneof: \"kind\", T: () => [\"google.protobuf.NullValue\", NullValue] },\n            { no: 2, name: \"number_value\", kind: \"scalar\", oneof: \"kind\", T: 1 /*ScalarType.DOUBLE*/ },\n            { no: 3, name: \"string_value\", kind: \"scalar\", oneof: \"kind\", T: 9 /*ScalarType.STRING*/ },\n            { no: 4, name: \"bool_value\", kind: \"scalar\", oneof: \"kind\", T: 8 /*ScalarType.BOOL*/ },\n            { no: 5, name: \"struct_value\", kind: \"message\", oneof: \"kind\", T: () => Struct },\n            { no: 6, name: \"list_value\", kind: \"message\", oneof: \"kind\", T: () => ListValue }\n        ]);\n    }\n    /**\n     * Encode `Value` to JSON value.\n     */\n    internalJsonWrite(message: Value, options: JsonWriteOptions): JsonValue {\n        if (message.kind.oneofKind === undefined)\n            throw new globalThis.Error();\n        switch (message.kind.oneofKind) {\n            case undefined: throw new globalThis.Error();\n            case \"boolValue\": return message.kind.boolValue;\n            case \"nullValue\": return null;\n            case \"numberValue\":\n                let numberValue = message.kind.numberValue;\n                if (typeof numberValue == \"number\" && !Number.isFinite(numberValue))\n                    throw new globalThis.Error();\n                return numberValue;\n            case \"stringValue\": return message.kind.stringValue;\n            case \"listValue\":\n                let listValueField = this.fields.find(f => f.no === 6);\n                if (listValueField?.kind !== \"message\")\n                    throw new globalThis.Error();\n                return listValueField.T().toJson(message.kind.listValue);\n            case \"structValue\":\n                let structValueField = this.fields.find(f => f.no === 5);\n                if (structValueField?.kind !== \"message\")\n                    throw new globalThis.Error();\n                return structValueField.T().toJson(message.kind.structValue);\n        }\n    }\n    /**\n     * Decode `Value` from JSON value.\n     */\n    internalJsonRead(json: JsonValue, options: JsonReadOptions, target?: Value): Value {\n        if (!target)\n            target = this.create();\n        switch (typeof json) {\n            case \"number\":\n                target.kind = { oneofKind: \"numberValue\", numberValue: json };\n                break;\n            case \"string\":\n                target.kind = { oneofKind: \"stringValue\", stringValue: json };\n                break;\n            case \"boolean\":\n                target.kind = { oneofKind: \"boolValue\", boolValue: json };\n                break;\n            case \"object\":\n                if (json === null) {\n                    target.kind = { oneofKind: \"nullValue\", nullValue: NullValue.NULL_VALUE };\n                }\n                else if (globalThis.Array.isArray(json)) {\n                    target.kind = { oneofKind: \"listValue\", listValue: ListValue.fromJson(json) };\n                }\n                else {\n                    target.kind = { oneofKind: \"structValue\", structValue: Struct.fromJson(json) };\n                }\n                break;\n            default: throw new globalThis.Error(\"Unable to parse \" + this.typeName + \" from JSON \" + typeofJsonValue(json));\n        }\n        return target;\n    }\n}\n/**\n * @generated MessageType for protobuf message google.protobuf.Value\n */\nexport const Value = new Value$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ListValue$Type extends MessageType<ListValue> {\n    constructor() {\n        super(\"google.protobuf.ListValue\", [\n            { no: 1, name: \"values\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => Value }\n        ]);\n    }\n    /**\n     * Encode `ListValue` to JSON array.\n     */\n    internalJsonWrite(message: ListValue, options: JsonWriteOptions): JsonValue {\n        return message.values.map(v => Value.toJson(v));\n    }\n    /**\n     * Decode `ListValue` from JSON array.\n     */\n    internalJsonRead(json: JsonValue, options: JsonReadOptions, target?: ListValue): ListValue {\n        if (!globalThis.Array.isArray(json))\n            throw new globalThis.Error(\"Unable to parse \" + this.typeName + \" from JSON \" + typeofJsonValue(json));\n        if (!target)\n            target = this.create();\n        let values = json.map(v => Value.fromJson(v));\n        target.values.push(...values);\n        return target;\n    }\n}\n/**\n * @generated MessageType for protobuf message google.protobuf.ListValue\n */\nexport const ListValue = new ListValue$Type();\n"],
  "mappings": "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",
  "names": ["NullValue"]
}
