{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/transaction_execution_service.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/transaction_execution_service.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { ServiceType } from \"@protobuf-ts/runtime-rpc\";\nimport { MessageType } from \"@protobuf-ts/runtime\";\nimport { Value } from \"../../../google/protobuf/struct\";\nimport { Bcs } from \"./bcs\";\nimport { Argument } from \"./argument\";\nimport { ExecutedTransaction } from \"./executed_transaction\";\nimport { FieldMask } from \"../../../google/protobuf/field_mask\";\nimport { UserSignature } from \"./signature\";\nimport { Transaction } from \"./transaction\";\n/**\n * @generated from protobuf message sui.rpc.v2.ExecuteTransactionRequest\n */\nexport interface ExecuteTransactionRequest {\n    /**\n     * The transaction to execute.\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.Transaction transaction = 1;\n     */\n    transaction?: Transaction;\n    /**\n     * Set of `UserSignature`s authorizing the execution of the provided\n     * transaction.\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.UserSignature signatures = 2;\n     */\n    signatures: UserSignature[];\n    /**\n     * Mask specifying which fields to read.\n     * If no mask is specified, defaults to `effects.status,checkpoint`.\n     *\n     * @generated from protobuf field: optional google.protobuf.FieldMask read_mask = 3;\n     */\n    readMask?: FieldMask;\n}\n/**\n * Response message for `NodeService.ExecuteTransaction`.\n *\n * @generated from protobuf message sui.rpc.v2.ExecuteTransactionResponse\n */\nexport interface ExecuteTransactionResponse {\n    /**\n     * @generated from protobuf field: optional sui.rpc.v2.ExecutedTransaction transaction = 1;\n     */\n    transaction?: ExecutedTransaction;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.SimulateTransactionRequest\n */\nexport interface SimulateTransactionRequest {\n    /**\n     * @generated from protobuf field: optional sui.rpc.v2.Transaction transaction = 1;\n     */\n    transaction?: Transaction;\n    /**\n     * Mask specifying which fields to read.\n     *\n     * @generated from protobuf field: optional google.protobuf.FieldMask read_mask = 2;\n     */\n    readMask?: FieldMask;\n    /**\n     * Specify whether checks should be ENABLED (default) or DISABLED while executing the transaction\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.SimulateTransactionRequest.TransactionChecks checks = 3;\n     */\n    checks?: SimulateTransactionRequest_TransactionChecks;\n    /**\n     * Perform gas selection based on a budget estimation and include the\n     * selected gas payment and budget in the response.\n     *\n     * This option will be ignored if `checks` is `DISABLED`.\n     *\n     * @generated from protobuf field: optional bool do_gas_selection = 4;\n     */\n    doGasSelection?: boolean;\n}\n/**\n * buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX\n *\n * @generated from protobuf enum sui.rpc.v2.SimulateTransactionRequest.TransactionChecks\n */\nexport enum SimulateTransactionRequest_TransactionChecks {\n    /**\n     * @generated from protobuf enum value: ENABLED = 0;\n     */\n    ENABLED = 0,\n    /**\n     * @generated from protobuf enum value: DISABLED = 1;\n     */\n    DISABLED = 1\n}\n/**\n * @generated from protobuf message sui.rpc.v2.SimulateTransactionResponse\n */\nexport interface SimulateTransactionResponse {\n    /**\n     * @generated from protobuf field: optional sui.rpc.v2.ExecutedTransaction transaction = 1;\n     */\n    transaction?: ExecutedTransaction;\n    /**\n     * @generated from protobuf field: repeated sui.rpc.v2.CommandResult command_outputs = 2;\n     */\n    commandOutputs: CommandResult[];\n}\n/**\n * An intermediate result/output from the execution of a single command\n *\n * @generated from protobuf message sui.rpc.v2.CommandResult\n */\nexport interface CommandResult {\n    /**\n     * @generated from protobuf field: repeated sui.rpc.v2.CommandOutput return_values = 1;\n     */\n    returnValues: CommandOutput[];\n    /**\n     * @generated from protobuf field: repeated sui.rpc.v2.CommandOutput mutated_by_ref = 2;\n     */\n    mutatedByRef: CommandOutput[];\n}\n/**\n * @generated from protobuf message sui.rpc.v2.CommandOutput\n */\nexport interface CommandOutput {\n    /**\n     * @generated from protobuf field: optional sui.rpc.v2.Argument argument = 1;\n     */\n    argument?: Argument;\n    /**\n     * @generated from protobuf field: optional sui.rpc.v2.Bcs value = 2;\n     */\n    value?: Bcs;\n    /**\n     * JSON rendering of the output.\n     *\n     * @generated from protobuf field: optional google.protobuf.Value json = 3;\n     */\n    json?: Value;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass ExecuteTransactionRequest$Type extends MessageType<ExecuteTransactionRequest> {\n    constructor() {\n        super(\"sui.rpc.v2.ExecuteTransactionRequest\", [\n            { no: 1, name: \"transaction\", kind: \"message\", T: () => Transaction },\n            { no: 2, name: \"signatures\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => UserSignature },\n            { no: 3, name: \"read_mask\", kind: \"message\", T: () => FieldMask }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ExecuteTransactionRequest\n */\nexport const ExecuteTransactionRequest = new ExecuteTransactionRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ExecuteTransactionResponse$Type extends MessageType<ExecuteTransactionResponse> {\n    constructor() {\n        super(\"sui.rpc.v2.ExecuteTransactionResponse\", [\n            { no: 1, name: \"transaction\", kind: \"message\", T: () => ExecutedTransaction }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ExecuteTransactionResponse\n */\nexport const ExecuteTransactionResponse = new ExecuteTransactionResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass SimulateTransactionRequest$Type extends MessageType<SimulateTransactionRequest> {\n    constructor() {\n        super(\"sui.rpc.v2.SimulateTransactionRequest\", [\n            { no: 1, name: \"transaction\", kind: \"message\", T: () => Transaction },\n            { no: 2, name: \"read_mask\", kind: \"message\", T: () => FieldMask },\n            { no: 3, name: \"checks\", kind: \"enum\", opt: true, T: () => [\"sui.rpc.v2.SimulateTransactionRequest.TransactionChecks\", SimulateTransactionRequest_TransactionChecks] },\n            { no: 4, name: \"do_gas_selection\", kind: \"scalar\", opt: true, T: 8 /*ScalarType.BOOL*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.SimulateTransactionRequest\n */\nexport const SimulateTransactionRequest = new SimulateTransactionRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass SimulateTransactionResponse$Type extends MessageType<SimulateTransactionResponse> {\n    constructor() {\n        super(\"sui.rpc.v2.SimulateTransactionResponse\", [\n            { no: 1, name: \"transaction\", kind: \"message\", T: () => ExecutedTransaction },\n            { no: 2, name: \"command_outputs\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => CommandResult }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.SimulateTransactionResponse\n */\nexport const SimulateTransactionResponse = new SimulateTransactionResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CommandResult$Type extends MessageType<CommandResult> {\n    constructor() {\n        super(\"sui.rpc.v2.CommandResult\", [\n            { no: 1, name: \"return_values\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => CommandOutput },\n            { no: 2, name: \"mutated_by_ref\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => CommandOutput }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.CommandResult\n */\nexport const CommandResult = new CommandResult$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CommandOutput$Type extends MessageType<CommandOutput> {\n    constructor() {\n        super(\"sui.rpc.v2.CommandOutput\", [\n            { no: 1, name: \"argument\", kind: \"message\", T: () => Argument },\n            { no: 2, name: \"value\", kind: \"message\", T: () => Bcs },\n            { no: 3, name: \"json\", kind: \"message\", T: () => Value }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.CommandOutput\n */\nexport const CommandOutput = new CommandOutput$Type();\n/**\n * @generated ServiceType for protobuf service sui.rpc.v2.TransactionExecutionService\n */\nexport const TransactionExecutionService = new ServiceType(\"sui.rpc.v2.TransactionExecutionService\", [\n    { name: \"ExecuteTransaction\", options: {}, I: ExecuteTransactionRequest, O: ExecuteTransactionResponse },\n    { name: \"SimulateTransaction\", options: {}, I: SimulateTransactionRequest, O: SimulateTransactionResponse }\n]);\n"],
  "mappings": "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",
  "names": ["SimulateTransactionRequest_TransactionChecks"]
}
