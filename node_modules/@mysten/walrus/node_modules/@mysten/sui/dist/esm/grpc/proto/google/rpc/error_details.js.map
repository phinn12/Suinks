{
  "version": 3,
  "sources": ["../../../../../../src/grpc/proto/google/rpc/error_details.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"google/rpc/error_details.proto\" (package \"google.rpc\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\nimport { MessageType } from \"@protobuf-ts/runtime\";\nimport { Duration } from \"../protobuf/duration\";\n/**\n * Describes the cause of the error with structured details.\n *\n * Example of an error when contacting the \"pubsub.googleapis.com\" API when it\n * is not enabled:\n *\n * ```text,json\n * { \"reason\": \"API_DISABLED\"\n *   \"domain\": \"googleapis.com\"\n *   \"metadata\": {\n *     \"resource\": \"projects/123\",\n *     \"service\": \"pubsub.googleapis.com\"\n *   }\n * }\n * ```\n *\n * This response indicates that the pubsub.googleapis.com API is not enabled.\n *\n * Example of an error that is returned when attempting to create a Spanner\n * instance in a region that is out of stock:\n *\n * ```text,json\n * { \"reason\": \"STOCKOUT\"\n *   \"domain\": \"spanner.googleapis.com\",\n *   \"metadata\": {\n *     \"availableRegions\": \"us-central1,us-east2\"\n *   }\n * }\n * ```\n *\n * @generated from protobuf message google.rpc.ErrorInfo\n */\nexport interface ErrorInfo {\n    /**\n     * The reason of the error. This is a constant value that identifies the\n     * proximate cause of the error. Error reasons are unique within a particular\n     * domain of errors. This should be at most 63 characters and match a\n     * regular expression of `[A-Z][A-Z0-9_]+[A-Z0-9]`, which represents\n     * UPPER_SNAKE_CASE.\n     *\n     * @generated from protobuf field: string reason = 1;\n     */\n    reason: string;\n    /**\n     * The logical grouping to which the \"reason\" belongs. The error domain\n     * is typically the registered service name of the tool or product that\n     * generates the error. Example: \"pubsub.googleapis.com\". If the error is\n     * generated by some common infrastructure, the error domain must be a\n     * globally unique value that identifies the infrastructure. For Google API\n     * infrastructure, the error domain is \"googleapis.com\".\n     *\n     * @generated from protobuf field: string domain = 2;\n     */\n    domain: string;\n    /**\n     * Additional structured details about this error.\n     *\n     * Keys must match a regular expression of `[a-z][a-zA-Z0-9-_]+` but should\n     * ideally be lowerCamelCase. Also, they must be limited to 64 characters in\n     * length. When identifying the current value of an exceeded limit, the units\n     * should be contained in the key, not the value.  For example, rather than\n     * `{\"instanceLimit\": \"100/request\"}`, should be returned as,\n     * `{\"instanceLimitPerRequest\": \"100\"}`, if the client exceeds the number of\n     * instances that can be created in a single (batch) request.\n     *\n     * @generated from protobuf field: map<string, string> metadata = 3;\n     */\n    metadata: {\n        [key: string]: string;\n    };\n}\n/**\n * Describes when the clients can retry a failed request. Clients could ignore\n * the recommendation here or retry when this information is missing from error\n * responses.\n *\n * It's always recommended that clients should use exponential backoff when\n * retrying.\n *\n * Clients should wait until `retry_delay` amount of time has passed since\n * receiving the error response before retrying.  If retrying requests also\n * fail, clients should use an exponential backoff scheme to gradually increase\n * the delay between retries based on `retry_delay`, until either a maximum\n * number of retries have been reached or a maximum retry delay cap has been\n * reached.\n *\n * @generated from protobuf message google.rpc.RetryInfo\n */\nexport interface RetryInfo {\n    /**\n     * Clients should wait at least this long between retrying the same request.\n     *\n     * @generated from protobuf field: google.protobuf.Duration retry_delay = 1;\n     */\n    retryDelay?: Duration;\n}\n/**\n * Describes additional debugging info.\n *\n * @generated from protobuf message google.rpc.DebugInfo\n */\nexport interface DebugInfo {\n    /**\n     * The stack trace entries indicating where the error occurred.\n     *\n     * @generated from protobuf field: repeated string stack_entries = 1;\n     */\n    stackEntries: string[];\n    /**\n     * Additional debugging information provided by the server.\n     *\n     * @generated from protobuf field: string detail = 2;\n     */\n    detail: string;\n}\n/**\n * Describes how a quota check failed.\n *\n * For example if a daily limit was exceeded for the calling project,\n * a service could respond with a QuotaFailure detail containing the project\n * id and the description of the quota limit that was exceeded.  If the\n * calling project hasn't enabled the service in the developer console, then\n * a service could respond with the project id and set `service_disabled`\n * to true.\n *\n * Also see RetryInfo and Help types for other details about handling a\n * quota failure.\n *\n * @generated from protobuf message google.rpc.QuotaFailure\n */\nexport interface QuotaFailure {\n    /**\n     * Describes all quota violations.\n     *\n     * @generated from protobuf field: repeated google.rpc.QuotaFailure.Violation violations = 1;\n     */\n    violations: QuotaFailure_Violation[];\n}\n/**\n * A message type used to describe a single quota violation.  For example, a\n * daily quota or a custom quota that was exceeded.\n *\n * @generated from protobuf message google.rpc.QuotaFailure.Violation\n */\nexport interface QuotaFailure_Violation {\n    /**\n     * The subject on which the quota check failed.\n     * For example, `clientip:<ip address of client>` or `project:<Google\n     * developer project id>`.\n     *\n     * @generated from protobuf field: string subject = 1;\n     */\n    subject: string;\n    /**\n     * A description of how the quota check failed. Clients can use this\n     * description to find more about the quota configuration in the service's\n     * public documentation, or find the relevant quota limit to adjust through\n     * developer console.\n     *\n     * For example: \"Service disabled\" or \"Daily Limit for read operations\n     * exceeded\".\n     *\n     * @generated from protobuf field: string description = 2;\n     */\n    description: string;\n}\n/**\n * Describes what preconditions have failed.\n *\n * For example, if an RPC failed because it required the Terms of Service to be\n * acknowledged, it could list the terms of service violation in the\n * PreconditionFailure message.\n *\n * @generated from protobuf message google.rpc.PreconditionFailure\n */\nexport interface PreconditionFailure {\n    /**\n     * Describes all precondition violations.\n     *\n     * @generated from protobuf field: repeated google.rpc.PreconditionFailure.Violation violations = 1;\n     */\n    violations: PreconditionFailure_Violation[];\n}\n/**\n * A message type used to describe a single precondition failure.\n *\n * @generated from protobuf message google.rpc.PreconditionFailure.Violation\n */\nexport interface PreconditionFailure_Violation {\n    /**\n     * The type of PreconditionFailure. We recommend using a service-specific\n     * enum type to define the supported precondition violation subjects. For\n     * example, \"TOS\" for \"Terms of Service violation\".\n     *\n     * @generated from protobuf field: string type = 1;\n     */\n    type: string;\n    /**\n     * The subject, relative to the type, that failed.\n     * For example, \"google.com/cloud\" relative to the \"TOS\" type would indicate\n     * which terms of service is being referenced.\n     *\n     * @generated from protobuf field: string subject = 2;\n     */\n    subject: string;\n    /**\n     * A description of how the precondition failed. Developers can use this\n     * description to understand how to fix the failure.\n     *\n     * For example: \"Terms of service not accepted\".\n     *\n     * @generated from protobuf field: string description = 3;\n     */\n    description: string;\n}\n/**\n * Describes violations in a client request. This error type focuses on the\n * syntactic aspects of the request.\n *\n * @generated from protobuf message google.rpc.BadRequest\n */\nexport interface BadRequest {\n    /**\n     * Describes all violations in a client request.\n     *\n     * @generated from protobuf field: repeated google.rpc.BadRequest.FieldViolation field_violations = 1;\n     */\n    fieldViolations: BadRequest_FieldViolation[];\n}\n/**\n * A message type used to describe a single bad request field.\n *\n * @generated from protobuf message google.rpc.BadRequest.FieldViolation\n */\nexport interface BadRequest_FieldViolation {\n    /**\n     * A path that leads to a field in the request body. The value will be a\n     * sequence of dot-separated identifiers that identify a protocol buffer\n     * field.\n     *\n     * Consider the following:\n     *\n     * ```text,json\n     * message CreateContactRequest {\n     *   message EmailAddress {\n     *     enum Type {\n     *       TYPE_UNSPECIFIED = 0;\n     *       HOME = 1;\n     *       WORK = 2;\n     *     }\n     *\n     *     optional string email = 1;\n     *     repeated EmailType type = 2;\n     *   }\n     *\n     *   string full_name = 1;\n     *   repeated EmailAddress email_addresses = 2;\n     * }\n     * ```\n     *\n     * In this example, in proto `field` could take one of the following values:\n     *\n     * * `full_name` for a violation in the `full_name` value\n     * * `email_addresses[1].email` for a violation in the `email` field of the\n     *   first `email_addresses` message\n     * * `email_addresses[3].type[2]` for a violation in the second `type`\n     *   value in the third `email_addresses` message.\n     *\n     * In JSON, the same values are represented as:\n     *\n     * * `fullName` for a violation in the `fullName` value\n     * * `emailAddresses[1].email` for a violation in the `email` field of the\n     *   first `emailAddresses` message\n     * * `emailAddresses[3].type[2]` for a violation in the second `type`\n     *   value in the third `emailAddresses` message.\n     *\n     * @generated from protobuf field: string field = 1;\n     */\n    field: string;\n    /**\n     * A description of why the request element is bad.\n     *\n     * @generated from protobuf field: string description = 2;\n     */\n    description: string;\n    /**\n     * The reason of the field-level error. This is a constant value that\n     * identifies the proximate cause of the field-level error. It should\n     * uniquely identify the type of the FieldViolation within the scope of the\n     * google.rpc.ErrorInfo.domain. This should be at most 63\n     * characters and match a regular expression of `[A-Z][A-Z0-9_]+[A-Z0-9]`,\n     * which represents UPPER_SNAKE_CASE.\n     *\n     * @generated from protobuf field: string reason = 3;\n     */\n    reason: string;\n    /**\n     * Provides a localized error message for field-level errors that is safe to\n     * return to the API consumer.\n     *\n     * @generated from protobuf field: google.rpc.LocalizedMessage localized_message = 4;\n     */\n    localizedMessage?: LocalizedMessage;\n}\n/**\n * Contains metadata about the request that clients can attach when filing a bug\n * or providing other forms of feedback.\n *\n * @generated from protobuf message google.rpc.RequestInfo\n */\nexport interface RequestInfo {\n    /**\n     * An opaque string that should only be interpreted by the service generating\n     * it. For example, it can be used to identify requests in the service's logs.\n     *\n     * @generated from protobuf field: string request_id = 1;\n     */\n    requestId: string;\n    /**\n     * Any data that was used to serve this request. For example, an encrypted\n     * stack trace that can be sent back to the service provider for debugging.\n     *\n     * @generated from protobuf field: string serving_data = 2;\n     */\n    servingData: string;\n}\n/**\n * Describes the resource that is being accessed.\n *\n * @generated from protobuf message google.rpc.ResourceInfo\n */\nexport interface ResourceInfo {\n    /**\n     * A name for the type of resource being accessed, e.g. \"sql table\",\n     * \"cloud storage bucket\", \"file\", \"Google calendar\"; or the type URL\n     * of the resource: e.g. \"type.googleapis.com/google.pubsub.v1.Topic\".\n     *\n     * @generated from protobuf field: string resource_type = 1;\n     */\n    resourceType: string;\n    /**\n     * The name of the resource being accessed.  For example, a shared calendar\n     * name: \"example.com_4fghdhgsrgh@group.calendar.google.com\", if the current\n     * error is\n     * [google.rpc.Code.PERMISSION_DENIED][google.rpc.Code.PERMISSION_DENIED].\n     *\n     * @generated from protobuf field: string resource_name = 2;\n     */\n    resourceName: string;\n    /**\n     * The owner of the resource (optional).\n     * For example, `user:<owner email>` or `project:<Google developer project\n     * id>`.\n     *\n     * @generated from protobuf field: string owner = 3;\n     */\n    owner: string;\n    /**\n     * Describes what error is encountered when accessing this resource.\n     * For example, updating a cloud project may require the `writer` permission\n     * on the developer console project.\n     *\n     * @generated from protobuf field: string description = 4;\n     */\n    description: string;\n}\n/**\n * Provides links to documentation or for performing an out of band action.\n *\n * For example, if a quota check failed with an error indicating the calling\n * project hasn't enabled the accessed service, this can contain a URL pointing\n * directly to the right place in the developer console to flip the bit.\n *\n * @generated from protobuf message google.rpc.Help\n */\nexport interface Help {\n    /**\n     * URL(s) pointing to additional information on handling the current error.\n     *\n     * @generated from protobuf field: repeated google.rpc.Help.Link links = 1;\n     */\n    links: Help_Link[];\n}\n/**\n * Describes a URL link.\n *\n * @generated from protobuf message google.rpc.Help.Link\n */\nexport interface Help_Link {\n    /**\n     * Describes what the link offers.\n     *\n     * @generated from protobuf field: string description = 1;\n     */\n    description: string;\n    /**\n     * The URL of the link.\n     *\n     * @generated from protobuf field: string url = 2;\n     */\n    url: string;\n}\n/**\n * Provides a localized error message that is safe to return to the user\n * which can be attached to an RPC error.\n *\n * @generated from protobuf message google.rpc.LocalizedMessage\n */\nexport interface LocalizedMessage {\n    /**\n     * The locale used following the specification defined at\n     * https://www.rfc-editor.org/rfc/bcp/bcp47.txt.\n     * Examples are: \"en-US\", \"fr-CH\", \"es-MX\"\n     *\n     * @generated from protobuf field: string locale = 1;\n     */\n    locale: string;\n    /**\n     * The localized error message in the above locale.\n     *\n     * @generated from protobuf field: string message = 2;\n     */\n    message: string;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass ErrorInfo$Type extends MessageType<ErrorInfo> {\n    constructor() {\n        super(\"google.rpc.ErrorInfo\", [\n            { no: 1, name: \"reason\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"domain\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"metadata\", kind: \"map\", K: 9 /*ScalarType.STRING*/, V: { kind: \"scalar\", T: 9 /*ScalarType.STRING*/ } }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message google.rpc.ErrorInfo\n */\nexport const ErrorInfo = new ErrorInfo$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass RetryInfo$Type extends MessageType<RetryInfo> {\n    constructor() {\n        super(\"google.rpc.RetryInfo\", [\n            { no: 1, name: \"retry_delay\", kind: \"message\", T: () => Duration }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message google.rpc.RetryInfo\n */\nexport const RetryInfo = new RetryInfo$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass DebugInfo$Type extends MessageType<DebugInfo> {\n    constructor() {\n        super(\"google.rpc.DebugInfo\", [\n            { no: 1, name: \"stack_entries\", kind: \"scalar\", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"detail\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message google.rpc.DebugInfo\n */\nexport const DebugInfo = new DebugInfo$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass QuotaFailure$Type extends MessageType<QuotaFailure> {\n    constructor() {\n        super(\"google.rpc.QuotaFailure\", [\n            { no: 1, name: \"violations\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => QuotaFailure_Violation }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message google.rpc.QuotaFailure\n */\nexport const QuotaFailure = new QuotaFailure$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass QuotaFailure_Violation$Type extends MessageType<QuotaFailure_Violation> {\n    constructor() {\n        super(\"google.rpc.QuotaFailure.Violation\", [\n            { no: 1, name: \"subject\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"description\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message google.rpc.QuotaFailure.Violation\n */\nexport const QuotaFailure_Violation = new QuotaFailure_Violation$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass PreconditionFailure$Type extends MessageType<PreconditionFailure> {\n    constructor() {\n        super(\"google.rpc.PreconditionFailure\", [\n            { no: 1, name: \"violations\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => PreconditionFailure_Violation }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message google.rpc.PreconditionFailure\n */\nexport const PreconditionFailure = new PreconditionFailure$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass PreconditionFailure_Violation$Type extends MessageType<PreconditionFailure_Violation> {\n    constructor() {\n        super(\"google.rpc.PreconditionFailure.Violation\", [\n            { no: 1, name: \"type\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"subject\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"description\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message google.rpc.PreconditionFailure.Violation\n */\nexport const PreconditionFailure_Violation = new PreconditionFailure_Violation$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BadRequest$Type extends MessageType<BadRequest> {\n    constructor() {\n        super(\"google.rpc.BadRequest\", [\n            { no: 1, name: \"field_violations\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => BadRequest_FieldViolation }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message google.rpc.BadRequest\n */\nexport const BadRequest = new BadRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BadRequest_FieldViolation$Type extends MessageType<BadRequest_FieldViolation> {\n    constructor() {\n        super(\"google.rpc.BadRequest.FieldViolation\", [\n            { no: 1, name: \"field\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"description\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"reason\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 4, name: \"localized_message\", kind: \"message\", T: () => LocalizedMessage }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message google.rpc.BadRequest.FieldViolation\n */\nexport const BadRequest_FieldViolation = new BadRequest_FieldViolation$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass RequestInfo$Type extends MessageType<RequestInfo> {\n    constructor() {\n        super(\"google.rpc.RequestInfo\", [\n            { no: 1, name: \"request_id\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"serving_data\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message google.rpc.RequestInfo\n */\nexport const RequestInfo = new RequestInfo$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ResourceInfo$Type extends MessageType<ResourceInfo> {\n    constructor() {\n        super(\"google.rpc.ResourceInfo\", [\n            { no: 1, name: \"resource_type\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"resource_name\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"owner\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 4, name: \"description\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message google.rpc.ResourceInfo\n */\nexport const ResourceInfo = new ResourceInfo$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Help$Type extends MessageType<Help> {\n    constructor() {\n        super(\"google.rpc.Help\", [\n            { no: 1, name: \"links\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => Help_Link }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message google.rpc.Help\n */\nexport const Help = new Help$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Help_Link$Type extends MessageType<Help_Link> {\n    constructor() {\n        super(\"google.rpc.Help.Link\", [\n            { no: 1, name: \"description\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"url\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message google.rpc.Help.Link\n */\nexport const Help_Link = new Help_Link$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass LocalizedMessage$Type extends MessageType<LocalizedMessage> {\n    constructor() {\n        super(\"google.rpc.LocalizedMessage\", [\n            { no: 1, name: \"locale\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"message\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message google.rpc.LocalizedMessage\n */\nexport const LocalizedMessage = new LocalizedMessage$Type();\n"],
  "mappings": "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",
  "names": []
}
