{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/event.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/event.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { MessageType } from \"@protobuf-ts/runtime\";\nimport { Value } from \"../../../google/protobuf/struct\";\nimport { Bcs } from \"./bcs\";\n/**\n * Events emitted during the successful execution of a transaction.\n *\n * @generated from protobuf message sui.rpc.v2.TransactionEvents\n */\nexport interface TransactionEvents {\n    /**\n     * This TransactionEvents serialized as BCS.\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.Bcs bcs = 1;\n     */\n    bcs?: Bcs;\n    /**\n     * The digest of this TransactionEvents.\n     *\n     * @generated from protobuf field: optional string digest = 2;\n     */\n    digest?: string;\n    /**\n     * Set of events emitted by a transaction.\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.Event events = 3;\n     */\n    events: Event[];\n}\n/**\n * An event.\n *\n * @generated from protobuf message sui.rpc.v2.Event\n */\nexport interface Event {\n    /**\n     * Package ID of the top-level function invoked by a `MoveCall` command that triggered this\n     * event to be emitted.\n     *\n     * @generated from protobuf field: optional string package_id = 1;\n     */\n    packageId?: string;\n    /**\n     * Module name of the top-level function invoked by a `MoveCall` command that triggered this\n     * event to be emitted.\n     *\n     * @generated from protobuf field: optional string module = 2;\n     */\n    module?: string;\n    /**\n     * Address of the account that sent the transaction where this event was emitted.\n     *\n     * @generated from protobuf field: optional string sender = 3;\n     */\n    sender?: string;\n    /**\n     * The type of the event emitted.\n     *\n     * @generated from protobuf field: optional string event_type = 4;\n     */\n    eventType?: string;\n    /**\n     * BCS serialized bytes of the event.\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.Bcs contents = 5;\n     */\n    contents?: Bcs;\n    /**\n     * JSON rendering of the event.\n     *\n     * @generated from protobuf field: optional google.protobuf.Value json = 6;\n     */\n    json?: Value;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass TransactionEvents$Type extends MessageType<TransactionEvents> {\n    constructor() {\n        super(\"sui.rpc.v2.TransactionEvents\", [\n            { no: 1, name: \"bcs\", kind: \"message\", T: () => Bcs },\n            { no: 2, name: \"digest\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"events\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => Event }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.TransactionEvents\n */\nexport const TransactionEvents = new TransactionEvents$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Event$Type extends MessageType<Event> {\n    constructor() {\n        super(\"sui.rpc.v2.Event\", [\n            { no: 1, name: \"package_id\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"module\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"sender\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 4, name: \"event_type\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 5, name: \"contents\", kind: \"message\", T: () => Bcs },\n            { no: 6, name: \"json\", kind: \"message\", T: () => Value }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.Event\n */\nexport const Event = new Event$Type();\n"],
  "mappings": "AAWA,SAAS,mBAAmB;AAC5B,SAAS,aAAa;AACtB,SAAS,WAAW;AAwEpB,MAAM,+BAA+B,YAA+B;AAAA,EAChE,cAAc;AACV,UAAM,gCAAgC;AAAA,MAClC,EAAE,IAAI,GAAG,MAAM,OAAO,MAAM,WAAW,GAAG,MAAM,IAAI;AAAA,MACpD;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAU,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC/E,EAAE,IAAI,GAAG,MAAM,UAAU,MAAM,WAAW,QAAQ,GAAyB,GAAG,MAAM,MAAM;AAAA,IAC9F,CAAC;AAAA,EACL;AACJ;AAIO,MAAM,oBAAoB,IAAI,uBAAuB;AAE5D,MAAM,mBAAmB,YAAmB;AAAA,EACxC,cAAc;AACV,UAAM,oBAAoB;AAAA,MACtB;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAc,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MACnF;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAU,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC/E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAU,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC/E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAc,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MACnF,EAAE,IAAI,GAAG,MAAM,YAAY,MAAM,WAAW,GAAG,MAAM,IAAI;AAAA,MACzD,EAAE,IAAI,GAAG,MAAM,QAAQ,MAAM,WAAW,GAAG,MAAM,MAAM;AAAA,IAC3D,CAAC;AAAA,EACL;AACJ;AAIO,MAAM,QAAQ,IAAI,WAAW;",
  "names": []
}
