{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/state_service.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/state_service.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { ServiceType } from \"@protobuf-ts/runtime-rpc\";\nimport { MessageType } from \"@protobuf-ts/runtime\";\nimport { Bcs } from \"./bcs\";\nimport { Object } from \"./object\";\nimport { FieldMask } from \"../../../google/protobuf/field_mask\";\n/**\n * Request message for `NodeService.GetCoinInfo`.\n *\n * @generated from protobuf message sui.rpc.v2.GetCoinInfoRequest\n */\nexport interface GetCoinInfoRequest {\n    /**\n     * The coin type to request information about\n     *\n     * @generated from protobuf field: optional string coin_type = 1;\n     */\n    coinType?: string;\n}\n/**\n * Response message for `NodeService.GetCoinInfo`.\n *\n * @generated from protobuf message sui.rpc.v2.GetCoinInfoResponse\n */\nexport interface GetCoinInfoResponse {\n    /**\n     * Required. The coin type.\n     *\n     * @generated from protobuf field: optional string coin_type = 1;\n     */\n    coinType?: string;\n    /**\n     * This field will be populated with information about this coin\n     * type's `0x2::coin::CoinMetadata` if it exists and has not been wrapped.\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.CoinMetadata metadata = 2;\n     */\n    metadata?: CoinMetadata;\n    /**\n     * This field will be populated with information about this coin\n     * type's `0x2::coin::TreasuryCap` if it exists and has not been wrapped.\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.CoinTreasury treasury = 3;\n     */\n    treasury?: CoinTreasury;\n    /**\n     * If this coin type is a regulated coin, this field will be\n     * populated with information either from its Currency object\n     * in the CoinRegistry, or from its `0x2::coin::RegulatedCoinMetadata`\n     * object for coins that have not been migrated to the CoinRegistry\n     *\n     * If this coin is not known to be regulated, only the\n     * coin_regulated_state field will be populated.\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.RegulatedCoinMetadata regulated_metadata = 4;\n     */\n    regulatedMetadata?: RegulatedCoinMetadata;\n}\n/**\n * Metadata for a coin type\n *\n * @generated from protobuf message sui.rpc.v2.CoinMetadata\n */\nexport interface CoinMetadata {\n    /**\n     * ObjectId of the `0x2::coin::CoinMetadata` object or\n     * 0x2::sui::coin_registry::Currency object (when registered with CoinRegistry).\n     *\n     * @generated from protobuf field: optional string id = 1;\n     */\n    id?: string;\n    /**\n     * Number of decimal places to coin uses.\n     *\n     * @generated from protobuf field: optional uint32 decimals = 2;\n     */\n    decimals?: number;\n    /**\n     * Name for the token\n     *\n     * @generated from protobuf field: optional string name = 3;\n     */\n    name?: string;\n    /**\n     * Symbol for the token\n     *\n     * @generated from protobuf field: optional string symbol = 4;\n     */\n    symbol?: string;\n    /**\n     * Description of the token\n     *\n     * @generated from protobuf field: optional string description = 5;\n     */\n    description?: string;\n    /**\n     * URL for the token logo\n     *\n     * @generated from protobuf field: optional string icon_url = 6;\n     */\n    iconUrl?: string;\n    /**\n     * The MetadataCap ID if it has been claimed for this coin type.\n     * This capability allows updating the coin's metadata fields.\n     * Only populated when metadata is from CoinRegistry.\n     *\n     * @generated from protobuf field: optional string metadata_cap_id = 7;\n     */\n    metadataCapId?: string;\n    /**\n     * State of the MetadataCap for this coin type.\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.CoinMetadata.MetadataCapState metadata_cap_state = 8;\n     */\n    metadataCapState?: CoinMetadata_MetadataCapState;\n}\n/**\n * Information about the state of the coin's MetadataCap\n *\n * @generated from protobuf enum sui.rpc.v2.CoinMetadata.MetadataCapState\n */\nexport enum CoinMetadata_MetadataCapState {\n    /**\n     * Indicates the state of the MetadataCap is unknown.\n     * Set when the coin has not been migrated to the CoinRegistry.\n     *\n     * @generated from protobuf enum value: METADATA_CAP_STATE_UNKNOWN = 0;\n     */\n    METADATA_CAP_STATE_UNKNOWN = 0,\n    /**\n     * Indicates the MetadataCap has been claimed.\n     *\n     * @generated from protobuf enum value: CLAIMED = 1;\n     */\n    CLAIMED = 1,\n    /**\n     * Indicates the MetadataCap has not been claimed.\n     *\n     * @generated from protobuf enum value: UNCLAIMED = 2;\n     */\n    UNCLAIMED = 2,\n    /**\n     * Indicates the MetadataCap has been deleted.\n     *\n     * @generated from protobuf enum value: DELETED = 3;\n     */\n    DELETED = 3\n}\n/**\n * Information about a coin type's `0x2::coin::TreasuryCap` and its total available supply\n *\n * @generated from protobuf message sui.rpc.v2.CoinTreasury\n */\nexport interface CoinTreasury {\n    /**\n     * ObjectId of the `0x2::coin::TreasuryCap` object.\n     *\n     * @generated from protobuf field: optional string id = 1;\n     */\n    id?: string;\n    /**\n     * Total available supply for this coin type.\n     *\n     * @generated from protobuf field: optional uint64 total_supply = 2;\n     */\n    totalSupply?: bigint;\n    /**\n     * Supply state indicating if the supply is fixed or can still be minted\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.CoinTreasury.SupplyState supply_state = 3;\n     */\n    supplyState?: CoinTreasury_SupplyState;\n}\n/**\n * Supply state of a coin, matching the Move SupplyState enum\n *\n * @generated from protobuf enum sui.rpc.v2.CoinTreasury.SupplyState\n */\nexport enum CoinTreasury_SupplyState {\n    /**\n     * Supply is unknown or TreasuryCap still exists (minting still possible)\n     *\n     * @generated from protobuf enum value: SUPPLY_STATE_UNKNOWN = 0;\n     */\n    SUPPLY_STATE_UNKNOWN = 0,\n    /**\n     * Supply is fixed (TreasuryCap consumed, no more minting possible)\n     *\n     * @generated from protobuf enum value: FIXED = 1;\n     */\n    FIXED = 1,\n    /**\n     * Supply can only decrease (burning allowed, minting not allowed)\n     *\n     * @generated from protobuf enum value: BURN_ONLY = 2;\n     */\n    BURN_ONLY = 2\n}\n/**\n * Information about a regulated coin, which indicates that it makes use of the transfer deny list.\n *\n * @generated from protobuf message sui.rpc.v2.RegulatedCoinMetadata\n */\nexport interface RegulatedCoinMetadata {\n    /**\n     * ObjectId of the `0x2::coin::RegulatedCoinMetadata` object.\n     * Only present for coins that have not been migrated to CoinRegistry.\n     *\n     * @generated from protobuf field: optional string id = 1;\n     */\n    id?: string;\n    /**\n     * The ID of the coin's `CoinMetadata` or `CoinData` object.\n     *\n     * @generated from protobuf field: optional string coin_metadata_object = 2;\n     */\n    coinMetadataObject?: string;\n    /**\n     * The ID of the coin's `DenyCap` object.\n     *\n     * @generated from protobuf field: optional string deny_cap_object = 3;\n     */\n    denyCapObject?: string;\n    /**\n     * Whether the coin can be globally paused\n     *\n     * @generated from protobuf field: optional bool allow_global_pause = 4;\n     */\n    allowGlobalPause?: boolean;\n    /**\n     * Variant of the regulated coin metadata\n     *\n     * @generated from protobuf field: optional uint32 variant = 5;\n     */\n    variant?: number;\n    /**\n     * Indicates the coin's regulated state.\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.RegulatedCoinMetadata.CoinRegulatedState coin_regulated_state = 6;\n     */\n    coinRegulatedState?: RegulatedCoinMetadata_CoinRegulatedState;\n}\n/**\n * Indicates the state of the regulation of the coin.\n *\n * @generated from protobuf enum sui.rpc.v2.RegulatedCoinMetadata.CoinRegulatedState\n */\nexport enum RegulatedCoinMetadata_CoinRegulatedState {\n    /**\n     * Indicates the regulation state of the coin is unknown.\n     * This is set when a coin has not been migrated to the\n     * coin registry and has no `0x2::coin::RegulatedCoinMetadata`\n     * object.\n     *\n     * @generated from protobuf enum value: COIN_REGULATED_STATE_UNKNOWN = 0;\n     */\n    COIN_REGULATED_STATE_UNKNOWN = 0,\n    /**\n     * Indicates a coin is regulated. RegulatedCoinMetadata will be populated.\n     *\n     * @generated from protobuf enum value: REGULATED = 1;\n     */\n    REGULATED = 1,\n    /**\n     * Indicates a coin is unregulated.\n     *\n     * @generated from protobuf enum value: UNREGULATED = 2;\n     */\n    UNREGULATED = 2\n}\n/**\n * Request message for `LiveDataService.GetBalance`.\n *\n * @generated from protobuf message sui.rpc.v2.GetBalanceRequest\n */\nexport interface GetBalanceRequest {\n    /**\n     * Required. The owner's Sui address.\n     *\n     * @generated from protobuf field: optional string owner = 1;\n     */\n    owner?: string;\n    /**\n     * Required. The type names for the coin (e.g., 0x2::sui::SUI).\n     *\n     * @generated from protobuf field: optional string coin_type = 2;\n     */\n    coinType?: string;\n}\n/**\n * Response message for `LiveDataService.GetBalance`.\n * Return the total coin balance for one coin type, owned by the address owner.\n *\n * @generated from protobuf message sui.rpc.v2.GetBalanceResponse\n */\nexport interface GetBalanceResponse {\n    /**\n     * The balance information for the requested coin type.\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.Balance balance = 1;\n     */\n    balance?: Balance;\n}\n/**\n * Request message for `LiveDataService.ListBalances`.\n *\n * @generated from protobuf message sui.rpc.v2.ListBalancesRequest\n */\nexport interface ListBalancesRequest {\n    /**\n     * Required. The owner's Sui address.\n     *\n     * @generated from protobuf field: optional string owner = 1;\n     */\n    owner?: string;\n    /**\n     * The maximum number of balance entries to return. The service may return fewer than this value.\n     * If unspecified, at most `50` entries will be returned.\n     * The maximum value is `1000`; values above `1000` will be coerced to `1000`.\n     *\n     * @generated from protobuf field: optional uint32 page_size = 2;\n     */\n    pageSize?: number;\n    /**\n     * A page token, received from a previous `ListBalances` call.\n     * Provide this to retrieve the subsequent page.\n     *\n     * When paginating, all other parameters provided to `ListBalances` must\n     * match the call that provided the page token.\n     *\n     * @generated from protobuf field: optional bytes page_token = 3;\n     */\n    pageToken?: Uint8Array;\n}\n/**\n * Response message for `LiveDataService.ListBalances`.\n * Return the total coin balance for all coin types, owned by the address owner.\n *\n * @generated from protobuf message sui.rpc.v2.ListBalancesResponse\n */\nexport interface ListBalancesResponse {\n    /**\n     * The list of coin types and their respective balances.\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.Balance balances = 1;\n     */\n    balances: Balance[];\n    /**\n     * A token, which can be sent as `page_token` to retrieve the next page.\n     * If this field is omitted, there are no subsequent pages.\n     *\n     * @generated from protobuf field: optional bytes next_page_token = 2;\n     */\n    nextPageToken?: Uint8Array;\n}\n/**\n * Balance information for a specific coin type.\n *\n * @generated from protobuf message sui.rpc.v2.Balance\n */\nexport interface Balance {\n    /**\n     * The type of the coin (e.g., 0x2::sui::SUI).\n     *\n     * @generated from protobuf field: optional string coin_type = 1;\n     */\n    coinType?: string;\n    /**\n     * Shows the total balance of the coin in its smallest unit.\n     *\n     * @generated from protobuf field: optional uint64 balance = 3;\n     */\n    balance?: bigint;\n}\n/**\n * Request message for `NodeService.ListDynamicFields`\n *\n * @generated from protobuf message sui.rpc.v2.ListDynamicFieldsRequest\n */\nexport interface ListDynamicFieldsRequest {\n    /**\n     * Required. The `UID` of the parent, which owns the collections of dynamic fields.\n     *\n     * @generated from protobuf field: optional string parent = 1;\n     */\n    parent?: string;\n    /**\n     * The maximum number of dynamic fields to return. The service may return fewer than this value.\n     * If unspecified, at most `50` entries will be returned.\n     * The maximum value is `1000`; values above `1000` will be coerced to `1000`.\n     *\n     * @generated from protobuf field: optional uint32 page_size = 2;\n     */\n    pageSize?: number;\n    /**\n     * A page token, received from a previous `ListDynamicFields` call.\n     * Provide this to retrieve the subsequent page.\n     *\n     * When paginating, all other parameters provided to `ListDynamicFields` must\n     * match the call that provided the page token.\n     *\n     * @generated from protobuf field: optional bytes page_token = 3;\n     */\n    pageToken?: Uint8Array;\n    /**\n     * Mask specifying which fields to read.\n     * If no mask is specified, defaults to `parent,field_id`.\n     *\n     * @generated from protobuf field: optional google.protobuf.FieldMask read_mask = 4;\n     */\n    readMask?: FieldMask;\n}\n/**\n * Response message for `NodeService.ListDynamicFields`\n *\n * @generated from protobuf message sui.rpc.v2.ListDynamicFieldsResponse\n */\nexport interface ListDynamicFieldsResponse {\n    /**\n     * Page of dynamic fields owned by the specified parent.\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.DynamicField dynamic_fields = 1;\n     */\n    dynamicFields: DynamicField[];\n    /**\n     * A token, which can be sent as `page_token` to retrieve the next page.\n     * If this field is omitted, there are no subsequent pages.\n     *\n     * @generated from protobuf field: optional bytes next_page_token = 2;\n     */\n    nextPageToken?: Uint8Array;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.DynamicField\n */\nexport interface DynamicField {\n    /**\n     * @generated from protobuf field: optional sui.rpc.v2.DynamicField.DynamicFieldKind kind = 1;\n     */\n    kind?: DynamicField_DynamicFieldKind;\n    /**\n     * ObjectId of this dynamic field's parent.\n     *\n     * @generated from protobuf field: optional string parent = 2;\n     */\n    parent?: string;\n    /**\n     * ObjectId of this dynamic field.\n     *\n     * @generated from protobuf field: optional string field_id = 3;\n     */\n    fieldId?: string;\n    /**\n     * The field object itself\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.Object field_object = 4;\n     */\n    fieldObject?: Object;\n    /**\n     * The dynamic field's \"name\"\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.Bcs name = 5;\n     */\n    name?: Bcs;\n    /**\n     * The dynamic field's \"value\"\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.Bcs value = 6;\n     */\n    value?: Bcs;\n    /**\n     * The type of the dynamic field \"value\".\n     *\n     * If this is a dynamic object field then this is the type of the object\n     * itself (which is a child of this field), otherwise this is the type of the\n     * value of this field.\n     *\n     * @generated from protobuf field: optional string value_type = 7;\n     */\n    valueType?: string;\n    /**\n     * The ObjectId of the child object when a child is a dynamic\n     * object field.\n     *\n     * The presence or absence of this field can be used to determine if a child\n     * is a dynamic field or a dynamic child object\n     *\n     * @generated from protobuf field: optional string child_id = 8;\n     */\n    childId?: string;\n    /**\n     * The object itself when a child is a dynamic object field.\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.Object child_object = 9;\n     */\n    childObject?: Object;\n}\n/**\n * @generated from protobuf enum sui.rpc.v2.DynamicField.DynamicFieldKind\n */\nexport enum DynamicField_DynamicFieldKind {\n    /**\n     * @generated from protobuf enum value: DYNAMIC_FIELD_KIND_UNKNOWN = 0;\n     */\n    DYNAMIC_FIELD_KIND_UNKNOWN = 0,\n    /**\n     * @generated from protobuf enum value: FIELD = 1;\n     */\n    FIELD = 1,\n    /**\n     * @generated from protobuf enum value: OBJECT = 2;\n     */\n    OBJECT = 2\n}\n/**\n * @generated from protobuf message sui.rpc.v2.ListOwnedObjectsRequest\n */\nexport interface ListOwnedObjectsRequest {\n    /**\n     * Required. The address of the account that owns the objects.\n     *\n     * @generated from protobuf field: optional string owner = 1;\n     */\n    owner?: string;\n    /**\n     * The maximum number of entries return. The service may return fewer than this value.\n     * If unspecified, at most `50` entries will be returned.\n     * The maximum value is `1000`; values above `1000` will be coerced to `1000`.\n     *\n     * @generated from protobuf field: optional uint32 page_size = 2;\n     */\n    pageSize?: number;\n    /**\n     * A page token, received from a previous `ListOwnedObjects` call.\n     * Provide this to retrieve the subsequent page.\n     *\n     * When paginating, all other parameters provided to `ListOwnedObjects` must\n     * match the call that provided the page token.\n     *\n     * @generated from protobuf field: optional bytes page_token = 3;\n     */\n    pageToken?: Uint8Array;\n    /**\n     * Mask specifying which fields to read.\n     * If no mask is specified, defaults to `object_id,version,object_type`.\n     *\n     * @generated from protobuf field: optional google.protobuf.FieldMask read_mask = 4;\n     */\n    readMask?: FieldMask;\n    /**\n     * Optional type filter to limit the types of objects listed.\n     *\n     * Providing an object type with no type params will return objects of that\n     * type with any type parameter, e.g. `0x2::coin::Coin` will return all\n     * `Coin<T>` objects regardless of the type parameter `T`. Providing a type\n     * with a type param will restrict the returned objects to only those objects\n     * that match the provided type parameters, e.g.\n     * `0x2::coin::Coin<0x2::sui::SUI>` will only return `Coin<SUI>` objects.\n     *\n     * @generated from protobuf field: optional string object_type = 5;\n     */\n    objectType?: string;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.ListOwnedObjectsResponse\n */\nexport interface ListOwnedObjectsResponse {\n    /**\n     * Page of dynamic fields owned by the specified parent.\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.Object objects = 1;\n     */\n    objects: Object[];\n    /**\n     * A token, which can be sent as `page_token` to retrieve the next page.\n     * If this field is omitted, there are no subsequent pages.\n     *\n     * @generated from protobuf field: optional bytes next_page_token = 2;\n     */\n    nextPageToken?: Uint8Array;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetCoinInfoRequest$Type extends MessageType<GetCoinInfoRequest> {\n    constructor() {\n        super(\"sui.rpc.v2.GetCoinInfoRequest\", [\n            { no: 1, name: \"coin_type\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetCoinInfoRequest\n */\nexport const GetCoinInfoRequest = new GetCoinInfoRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetCoinInfoResponse$Type extends MessageType<GetCoinInfoResponse> {\n    constructor() {\n        super(\"sui.rpc.v2.GetCoinInfoResponse\", [\n            { no: 1, name: \"coin_type\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"metadata\", kind: \"message\", T: () => CoinMetadata },\n            { no: 3, name: \"treasury\", kind: \"message\", T: () => CoinTreasury },\n            { no: 4, name: \"regulated_metadata\", kind: \"message\", T: () => RegulatedCoinMetadata }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetCoinInfoResponse\n */\nexport const GetCoinInfoResponse = new GetCoinInfoResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CoinMetadata$Type extends MessageType<CoinMetadata> {\n    constructor() {\n        super(\"sui.rpc.v2.CoinMetadata\", [\n            { no: 1, name: \"id\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"decimals\", kind: \"scalar\", opt: true, T: 13 /*ScalarType.UINT32*/ },\n            { no: 3, name: \"name\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 4, name: \"symbol\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 5, name: \"description\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 6, name: \"icon_url\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 7, name: \"metadata_cap_id\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 8, name: \"metadata_cap_state\", kind: \"enum\", opt: true, T: () => [\"sui.rpc.v2.CoinMetadata.MetadataCapState\", CoinMetadata_MetadataCapState] }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.CoinMetadata\n */\nexport const CoinMetadata = new CoinMetadata$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CoinTreasury$Type extends MessageType<CoinTreasury> {\n    constructor() {\n        super(\"sui.rpc.v2.CoinTreasury\", [\n            { no: 1, name: \"id\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"total_supply\", kind: \"scalar\", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },\n            { no: 3, name: \"supply_state\", kind: \"enum\", opt: true, T: () => [\"sui.rpc.v2.CoinTreasury.SupplyState\", CoinTreasury_SupplyState] }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.CoinTreasury\n */\nexport const CoinTreasury = new CoinTreasury$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass RegulatedCoinMetadata$Type extends MessageType<RegulatedCoinMetadata> {\n    constructor() {\n        super(\"sui.rpc.v2.RegulatedCoinMetadata\", [\n            { no: 1, name: \"id\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"coin_metadata_object\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"deny_cap_object\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 4, name: \"allow_global_pause\", kind: \"scalar\", opt: true, T: 8 /*ScalarType.BOOL*/ },\n            { no: 5, name: \"variant\", kind: \"scalar\", opt: true, T: 13 /*ScalarType.UINT32*/ },\n            { no: 6, name: \"coin_regulated_state\", kind: \"enum\", opt: true, T: () => [\"sui.rpc.v2.RegulatedCoinMetadata.CoinRegulatedState\", RegulatedCoinMetadata_CoinRegulatedState] }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.RegulatedCoinMetadata\n */\nexport const RegulatedCoinMetadata = new RegulatedCoinMetadata$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetBalanceRequest$Type extends MessageType<GetBalanceRequest> {\n    constructor() {\n        super(\"sui.rpc.v2.GetBalanceRequest\", [\n            { no: 1, name: \"owner\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"coin_type\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetBalanceRequest\n */\nexport const GetBalanceRequest = new GetBalanceRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetBalanceResponse$Type extends MessageType<GetBalanceResponse> {\n    constructor() {\n        super(\"sui.rpc.v2.GetBalanceResponse\", [\n            { no: 1, name: \"balance\", kind: \"message\", T: () => Balance }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetBalanceResponse\n */\nexport const GetBalanceResponse = new GetBalanceResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ListBalancesRequest$Type extends MessageType<ListBalancesRequest> {\n    constructor() {\n        super(\"sui.rpc.v2.ListBalancesRequest\", [\n            { no: 1, name: \"owner\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"page_size\", kind: \"scalar\", opt: true, T: 13 /*ScalarType.UINT32*/ },\n            { no: 3, name: \"page_token\", kind: \"scalar\", opt: true, T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ListBalancesRequest\n */\nexport const ListBalancesRequest = new ListBalancesRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ListBalancesResponse$Type extends MessageType<ListBalancesResponse> {\n    constructor() {\n        super(\"sui.rpc.v2.ListBalancesResponse\", [\n            { no: 1, name: \"balances\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => Balance },\n            { no: 2, name: \"next_page_token\", kind: \"scalar\", opt: true, T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ListBalancesResponse\n */\nexport const ListBalancesResponse = new ListBalancesResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Balance$Type extends MessageType<Balance> {\n    constructor() {\n        super(\"sui.rpc.v2.Balance\", [\n            { no: 1, name: \"coin_type\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"balance\", kind: \"scalar\", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.Balance\n */\nexport const Balance = new Balance$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ListDynamicFieldsRequest$Type extends MessageType<ListDynamicFieldsRequest> {\n    constructor() {\n        super(\"sui.rpc.v2.ListDynamicFieldsRequest\", [\n            { no: 1, name: \"parent\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"page_size\", kind: \"scalar\", opt: true, T: 13 /*ScalarType.UINT32*/ },\n            { no: 3, name: \"page_token\", kind: \"scalar\", opt: true, T: 12 /*ScalarType.BYTES*/ },\n            { no: 4, name: \"read_mask\", kind: \"message\", T: () => FieldMask }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ListDynamicFieldsRequest\n */\nexport const ListDynamicFieldsRequest = new ListDynamicFieldsRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ListDynamicFieldsResponse$Type extends MessageType<ListDynamicFieldsResponse> {\n    constructor() {\n        super(\"sui.rpc.v2.ListDynamicFieldsResponse\", [\n            { no: 1, name: \"dynamic_fields\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => DynamicField },\n            { no: 2, name: \"next_page_token\", kind: \"scalar\", opt: true, T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ListDynamicFieldsResponse\n */\nexport const ListDynamicFieldsResponse = new ListDynamicFieldsResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass DynamicField$Type extends MessageType<DynamicField> {\n    constructor() {\n        super(\"sui.rpc.v2.DynamicField\", [\n            { no: 1, name: \"kind\", kind: \"enum\", opt: true, T: () => [\"sui.rpc.v2.DynamicField.DynamicFieldKind\", DynamicField_DynamicFieldKind] },\n            { no: 2, name: \"parent\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"field_id\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 4, name: \"field_object\", kind: \"message\", T: () => Object },\n            { no: 5, name: \"name\", kind: \"message\", T: () => Bcs },\n            { no: 6, name: \"value\", kind: \"message\", T: () => Bcs },\n            { no: 7, name: \"value_type\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 8, name: \"child_id\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 9, name: \"child_object\", kind: \"message\", T: () => Object }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.DynamicField\n */\nexport const DynamicField = new DynamicField$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ListOwnedObjectsRequest$Type extends MessageType<ListOwnedObjectsRequest> {\n    constructor() {\n        super(\"sui.rpc.v2.ListOwnedObjectsRequest\", [\n            { no: 1, name: \"owner\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"page_size\", kind: \"scalar\", opt: true, T: 13 /*ScalarType.UINT32*/ },\n            { no: 3, name: \"page_token\", kind: \"scalar\", opt: true, T: 12 /*ScalarType.BYTES*/ },\n            { no: 4, name: \"read_mask\", kind: \"message\", T: () => FieldMask },\n            { no: 5, name: \"object_type\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ListOwnedObjectsRequest\n */\nexport const ListOwnedObjectsRequest = new ListOwnedObjectsRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ListOwnedObjectsResponse$Type extends MessageType<ListOwnedObjectsResponse> {\n    constructor() {\n        super(\"sui.rpc.v2.ListOwnedObjectsResponse\", [\n            { no: 1, name: \"objects\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => Object },\n            { no: 2, name: \"next_page_token\", kind: \"scalar\", opt: true, T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ListOwnedObjectsResponse\n */\nexport const ListOwnedObjectsResponse = new ListOwnedObjectsResponse$Type();\n/**\n * @generated ServiceType for protobuf service sui.rpc.v2.StateService\n */\nexport const StateService = new ServiceType(\"sui.rpc.v2.StateService\", [\n    { name: \"ListDynamicFields\", options: {}, I: ListDynamicFieldsRequest, O: ListDynamicFieldsResponse },\n    { name: \"ListOwnedObjects\", options: {}, I: ListOwnedObjectsRequest, O: ListOwnedObjectsResponse },\n    { name: \"GetCoinInfo\", options: {}, I: GetCoinInfoRequest, O: GetCoinInfoResponse },\n    { name: \"GetBalance\", options: {}, I: GetBalanceRequest, O: GetBalanceResponse },\n    { name: \"ListBalances\", options: {}, I: ListBalancesRequest, O: ListBalancesResponse }\n]);\n"],
  "mappings": "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",
  "names": ["CoinMetadata_MetadataCapState", "CoinTreasury_SupplyState", "RegulatedCoinMetadata_CoinRegulatedState", "DynamicField_DynamicFieldKind"]
}
