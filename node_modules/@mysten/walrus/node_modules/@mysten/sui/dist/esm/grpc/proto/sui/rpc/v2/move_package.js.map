{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/move_package.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/move_package.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { MessageType } from \"@protobuf-ts/runtime\";\n/**\n * A Move Package\n *\n * @generated from protobuf message sui.rpc.v2.Package\n */\nexport interface Package {\n    /**\n     * The PackageId of this package\n     *\n     * A package's `storage_id` is the Sui ObjectId of the package on-chain.\n     * Outside of system packages the `storage_id` for every package version is\n     * different.\n     *\n     * @generated from protobuf field: optional string storage_id = 1;\n     */\n    storageId?: string;\n    /**\n     * The PackageId of the first published version of this package.\n     *\n     * A package's `original_id` (sometimes also called its `runtime_id`) is the\n     * `storage_id` of the first version of this package that has been published.\n     * The `original_id`/`runtime_id` is stable across all versions of the\n     * package and does not ever change.\n     *\n     * @generated from protobuf field: optional string original_id = 2;\n     */\n    originalId?: string;\n    /**\n     * The version of this package\n     *\n     * @generated from protobuf field: optional uint64 version = 3;\n     */\n    version?: bigint;\n    /**\n     * The modules defined by this package\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.Module modules = 4;\n     */\n    modules: Module[];\n    /**\n     * List of datatype origins for mapping datatypes to a package version where\n     * it was first defined\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.TypeOrigin type_origins = 5;\n     */\n    typeOrigins: TypeOrigin[];\n    /**\n     * The package's transitive dependencies as a mapping from the package's\n     * runtime Id (the Id it is referred to by in other packages) to its\n     * storage Id (the Id it is loaded from on chain).\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.Linkage linkage = 6;\n     */\n    linkage: Linkage[];\n}\n/**\n * A Move Module.\n *\n * @generated from protobuf message sui.rpc.v2.Module\n */\nexport interface Module {\n    /**\n     * Name of this module.\n     *\n     * @generated from protobuf field: optional string name = 1;\n     */\n    name?: string;\n    /**\n     * Serialized bytecode of the module.\n     *\n     * @generated from protobuf field: optional bytes contents = 2;\n     */\n    contents?: Uint8Array;\n    /**\n     * List of DataTypes defined by this module.\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.DatatypeDescriptor datatypes = 3;\n     */\n    datatypes: DatatypeDescriptor[];\n    /**\n     * List of Functions defined by this module.\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.FunctionDescriptor functions = 4;\n     */\n    functions: FunctionDescriptor[];\n}\n/**\n * Describes a Move Datatype.\n *\n * @generated from protobuf message sui.rpc.v2.DatatypeDescriptor\n */\nexport interface DatatypeDescriptor {\n    /**\n     * Fully qualified name of this Datatype.\n     *\n     * This is `<defining_id>::<module>::<name>`\n     *\n     * @generated from protobuf field: optional string type_name = 1;\n     */\n    typeName?: string;\n    /**\n     * PackageId of the package where this Datatype is defined.\n     *\n     * A type's `defining_id` is the `storage_id` of the package version that first introduced or added that type.\n     *\n     * @generated from protobuf field: optional string defining_id = 2;\n     */\n    definingId?: string;\n    /**\n     * Name of the module where this Datatype is defined\n     *\n     * @generated from protobuf field: optional string module = 3;\n     */\n    module?: string;\n    /**\n     * Name of this Datatype\n     *\n     * @generated from protobuf field: optional string name = 4;\n     */\n    name?: string;\n    /**\n     * This type's abilities\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.Ability abilities = 5;\n     */\n    abilities: Ability[];\n    /**\n     * Ability constraints and phantom status for this type's generic type parameters\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.TypeParameter type_parameters = 6;\n     */\n    typeParameters: TypeParameter[];\n    /**\n     * Indicates whether this datatype is a 'STRUCT' or an 'ENUM'\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.DatatypeDescriptor.DatatypeKind kind = 7;\n     */\n    kind?: DatatypeDescriptor_DatatypeKind;\n    /**\n     * Set of fields if this Datatype is a struct.\n     *\n     * The order of the entries is the order of how the fields are defined.\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.FieldDescriptor fields = 8;\n     */\n    fields: FieldDescriptor[];\n    /**\n     * Set of variants if this Datatype is an enum.\n     *\n     * The order of the entries is the order of how the variants are defined.\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.VariantDescriptor variants = 9;\n     */\n    variants: VariantDescriptor[];\n}\n/**\n * @generated from protobuf enum sui.rpc.v2.DatatypeDescriptor.DatatypeKind\n */\nexport enum DatatypeDescriptor_DatatypeKind {\n    /**\n     * @generated from protobuf enum value: DATATYPE_KIND_UNKNOWN = 0;\n     */\n    DATATYPE_KIND_UNKNOWN = 0,\n    /**\n     * @generated from protobuf enum value: STRUCT = 1;\n     */\n    STRUCT = 1,\n    /**\n     * @generated from protobuf enum value: ENUM = 2;\n     */\n    ENUM = 2\n}\n/**\n * A generic type parameter used in the declaration of a struct or enum.\n *\n * @generated from protobuf message sui.rpc.v2.TypeParameter\n */\nexport interface TypeParameter {\n    /**\n     * The type parameter constraints\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.Ability constraints = 1;\n     */\n    constraints: Ability[];\n    /**\n     * Whether the parameter is declared as phantom\n     *\n     * @generated from protobuf field: optional bool is_phantom = 2;\n     */\n    isPhantom?: boolean;\n}\n/**\n * Descriptor of a field that belongs to a struct or enum variant\n *\n * @generated from protobuf message sui.rpc.v2.FieldDescriptor\n */\nexport interface FieldDescriptor {\n    /**\n     * Name of the field\n     *\n     * @generated from protobuf field: optional string name = 1;\n     */\n    name?: string;\n    /**\n     * Order or position of the field in the struct or enum variant definition.\n     *\n     * @generated from protobuf field: optional uint32 position = 2;\n     */\n    position?: number;\n    /**\n     * The type of the field\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.OpenSignatureBody type = 3;\n     */\n    type?: OpenSignatureBody;\n}\n/**\n * Descriptor of an enum variant\n *\n * @generated from protobuf message sui.rpc.v2.VariantDescriptor\n */\nexport interface VariantDescriptor {\n    /**\n     * Name of the variant\n     *\n     * @generated from protobuf field: optional string name = 1;\n     */\n    name?: string;\n    /**\n     * Order or position of the variant in the enum definition.\n     *\n     * @generated from protobuf field: optional uint32 position = 2;\n     */\n    position?: number;\n    /**\n     * Set of fields defined by this variant.\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.FieldDescriptor fields = 3;\n     */\n    fields: FieldDescriptor[];\n}\n/**\n * Representation of a type signature that could appear as a field type for a struct or enum\n *\n * @generated from protobuf message sui.rpc.v2.OpenSignatureBody\n */\nexport interface OpenSignatureBody {\n    /**\n     * Type of this signature\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.OpenSignatureBody.Type type = 1;\n     */\n    type?: OpenSignatureBody_Type;\n    /**\n     * Fully qualified name of the datatype when `type` is `DATATYPE`\n     *\n     * @generated from protobuf field: optional string type_name = 2;\n     */\n    typeName?: string;\n    /**\n     * Set when `type` is `VECTOR` or `DATATYPE`\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.OpenSignatureBody type_parameter_instantiation = 3;\n     */\n    typeParameterInstantiation: OpenSignatureBody[];\n    /**\n     * Position of the type parameter as defined in the containing data type descriptor when `type` is `TYPE_PARAMETER`\n     *\n     * @generated from protobuf field: optional uint32 type_parameter = 4;\n     */\n    typeParameter?: number;\n}\n/**\n * @generated from protobuf enum sui.rpc.v2.OpenSignatureBody.Type\n */\nexport enum OpenSignatureBody_Type {\n    /**\n     * @generated from protobuf enum value: TYPE_UNKNOWN = 0;\n     */\n    TYPE_UNKNOWN = 0,\n    /**\n     * @generated from protobuf enum value: ADDRESS = 1;\n     */\n    ADDRESS = 1,\n    /**\n     * @generated from protobuf enum value: BOOL = 2;\n     */\n    BOOL = 2,\n    /**\n     * @generated from protobuf enum value: U8 = 3;\n     */\n    U8 = 3,\n    /**\n     * @generated from protobuf enum value: U16 = 4;\n     */\n    U16 = 4,\n    /**\n     * @generated from protobuf enum value: U32 = 5;\n     */\n    U32 = 5,\n    /**\n     * @generated from protobuf enum value: U64 = 6;\n     */\n    U64 = 6,\n    /**\n     * @generated from protobuf enum value: U128 = 7;\n     */\n    U128 = 7,\n    /**\n     * @generated from protobuf enum value: U256 = 8;\n     */\n    U256 = 8,\n    /**\n     * @generated from protobuf enum value: VECTOR = 9;\n     */\n    VECTOR = 9,\n    /**\n     * @generated from protobuf enum value: DATATYPE = 10;\n     */\n    DATATYPE = 10,\n    /**\n     * @generated from protobuf enum value: TYPE_PARAMETER = 11;\n     */\n    TYPE_PARAMETER = 11\n}\n/**\n * Descriptor of a Move function\n *\n * @generated from protobuf message sui.rpc.v2.FunctionDescriptor\n */\nexport interface FunctionDescriptor {\n    /**\n     * Name of the function\n     *\n     * @generated from protobuf field: optional string name = 1;\n     */\n    name?: string;\n    /**\n     * Whether the function is `public`, `private` or `public(friend)`\n     *\n     * @generated from protobuf field: optional sui.rpc.v2.FunctionDescriptor.Visibility visibility = 5;\n     */\n    visibility?: FunctionDescriptor_Visibility;\n    /**\n     * Whether the function is marked `entry` or not.\n     *\n     * @generated from protobuf field: optional bool is_entry = 6;\n     */\n    isEntry?: boolean;\n    /**\n     * Ability constraints for type parameters\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.TypeParameter type_parameters = 7;\n     */\n    typeParameters: TypeParameter[];\n    /**\n     * Formal parameter types.\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.OpenSignature parameters = 8;\n     */\n    parameters: OpenSignature[];\n    /**\n     * Return types.\n     *\n     * @generated from protobuf field: repeated sui.rpc.v2.OpenSignature returns = 9;\n     */\n    returns: OpenSignature[];\n}\n/**\n * @generated from protobuf enum sui.rpc.v2.FunctionDescriptor.Visibility\n */\nexport enum FunctionDescriptor_Visibility {\n    /**\n     * @generated from protobuf enum value: VISIBILITY_UNKNOWN = 0;\n     */\n    VISIBILITY_UNKNOWN = 0,\n    /**\n     * @generated from protobuf enum value: PRIVATE = 1;\n     */\n    PRIVATE = 1,\n    /**\n     * @generated from protobuf enum value: PUBLIC = 2;\n     */\n    PUBLIC = 2,\n    /**\n     * @generated from protobuf enum value: FRIEND = 3;\n     */\n    FRIEND = 3\n}\n/**\n * Representation of a type signature that could appear as a function parameter or return value.\n *\n * @generated from protobuf message sui.rpc.v2.OpenSignature\n */\nexport interface OpenSignature {\n    /**\n     * @generated from protobuf field: optional sui.rpc.v2.OpenSignature.Reference reference = 1;\n     */\n    reference?: OpenSignature_Reference;\n    /**\n     * @generated from protobuf field: optional sui.rpc.v2.OpenSignatureBody body = 2;\n     */\n    body?: OpenSignatureBody;\n}\n/**\n * @generated from protobuf enum sui.rpc.v2.OpenSignature.Reference\n */\nexport enum OpenSignature_Reference {\n    /**\n     * @generated from protobuf enum value: REFERENCE_UNKNOWN = 0;\n     */\n    REFERENCE_UNKNOWN = 0,\n    /**\n     * @generated from protobuf enum value: IMMUTABLE = 1;\n     */\n    IMMUTABLE = 1,\n    /**\n     * @generated from protobuf enum value: MUTABLE = 2;\n     */\n    MUTABLE = 2\n}\n/**\n * Identifies a struct and the module it was defined in.\n *\n * @generated from protobuf message sui.rpc.v2.TypeOrigin\n */\nexport interface TypeOrigin {\n    /**\n     * @generated from protobuf field: optional string module_name = 1;\n     */\n    moduleName?: string;\n    /**\n     * @generated from protobuf field: optional string datatype_name = 2;\n     */\n    datatypeName?: string;\n    /**\n     * @generated from protobuf field: optional string package_id = 3;\n     */\n    packageId?: string;\n}\n/**\n * Upgraded package info for the linkage table.\n *\n * @generated from protobuf message sui.rpc.v2.Linkage\n */\nexport interface Linkage {\n    /**\n     * Id of the original package.\n     *\n     * @generated from protobuf field: optional string original_id = 1;\n     */\n    originalId?: string;\n    /**\n     * Id of the upgraded package.\n     *\n     * @generated from protobuf field: optional string upgraded_id = 2;\n     */\n    upgradedId?: string;\n    /**\n     * Version of the upgraded package.\n     *\n     * @generated from protobuf field: optional uint64 upgraded_version = 3;\n     */\n    upgradedVersion?: bigint;\n}\n/**\n * An `Ability` classifies what operations are permitted for a given type\n *\n * @generated from protobuf enum sui.rpc.v2.Ability\n */\nexport enum Ability {\n    /**\n     * @generated from protobuf enum value: ABILITY_UNKNOWN = 0;\n     */\n    ABILITY_UNKNOWN = 0,\n    /**\n     * Allows values of types with this ability to be copied\n     *\n     * @generated from protobuf enum value: COPY = 1;\n     */\n    COPY = 1,\n    /**\n     * Allows values of types with this ability to be dropped.\n     *\n     * @generated from protobuf enum value: DROP = 2;\n     */\n    DROP = 2,\n    /**\n     * Allows values of types with this ability to exist inside a struct in global storage\n     *\n     * @generated from protobuf enum value: STORE = 3;\n     */\n    STORE = 3,\n    /**\n     * Allows the type to serve as a key for global storage operations\n     *\n     * @generated from protobuf enum value: KEY = 4;\n     */\n    KEY = 4\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass Package$Type extends MessageType<Package> {\n    constructor() {\n        super(\"sui.rpc.v2.Package\", [\n            { no: 1, name: \"storage_id\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"original_id\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"version\", kind: \"scalar\", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },\n            { no: 4, name: \"modules\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => Module },\n            { no: 5, name: \"type_origins\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => TypeOrigin },\n            { no: 6, name: \"linkage\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => Linkage }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.Package\n */\nexport const Package = new Package$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Module$Type extends MessageType<Module> {\n    constructor() {\n        super(\"sui.rpc.v2.Module\", [\n            { no: 1, name: \"name\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"contents\", kind: \"scalar\", opt: true, T: 12 /*ScalarType.BYTES*/ },\n            { no: 3, name: \"datatypes\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => DatatypeDescriptor },\n            { no: 4, name: \"functions\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => FunctionDescriptor }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.Module\n */\nexport const Module = new Module$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass DatatypeDescriptor$Type extends MessageType<DatatypeDescriptor> {\n    constructor() {\n        super(\"sui.rpc.v2.DatatypeDescriptor\", [\n            { no: 1, name: \"type_name\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"defining_id\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"module\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 4, name: \"name\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 5, name: \"abilities\", kind: \"enum\", repeat: 1 /*RepeatType.PACKED*/, T: () => [\"sui.rpc.v2.Ability\", Ability] },\n            { no: 6, name: \"type_parameters\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => TypeParameter },\n            { no: 7, name: \"kind\", kind: \"enum\", opt: true, T: () => [\"sui.rpc.v2.DatatypeDescriptor.DatatypeKind\", DatatypeDescriptor_DatatypeKind] },\n            { no: 8, name: \"fields\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => FieldDescriptor },\n            { no: 9, name: \"variants\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => VariantDescriptor }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.DatatypeDescriptor\n */\nexport const DatatypeDescriptor = new DatatypeDescriptor$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass TypeParameter$Type extends MessageType<TypeParameter> {\n    constructor() {\n        super(\"sui.rpc.v2.TypeParameter\", [\n            { no: 1, name: \"constraints\", kind: \"enum\", repeat: 1 /*RepeatType.PACKED*/, T: () => [\"sui.rpc.v2.Ability\", Ability] },\n            { no: 2, name: \"is_phantom\", kind: \"scalar\", opt: true, T: 8 /*ScalarType.BOOL*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.TypeParameter\n */\nexport const TypeParameter = new TypeParameter$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass FieldDescriptor$Type extends MessageType<FieldDescriptor> {\n    constructor() {\n        super(\"sui.rpc.v2.FieldDescriptor\", [\n            { no: 1, name: \"name\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"position\", kind: \"scalar\", opt: true, T: 13 /*ScalarType.UINT32*/ },\n            { no: 3, name: \"type\", kind: \"message\", T: () => OpenSignatureBody }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.FieldDescriptor\n */\nexport const FieldDescriptor = new FieldDescriptor$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass VariantDescriptor$Type extends MessageType<VariantDescriptor> {\n    constructor() {\n        super(\"sui.rpc.v2.VariantDescriptor\", [\n            { no: 1, name: \"name\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"position\", kind: \"scalar\", opt: true, T: 13 /*ScalarType.UINT32*/ },\n            { no: 3, name: \"fields\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => FieldDescriptor }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.VariantDescriptor\n */\nexport const VariantDescriptor = new VariantDescriptor$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass OpenSignatureBody$Type extends MessageType<OpenSignatureBody> {\n    constructor() {\n        super(\"sui.rpc.v2.OpenSignatureBody\", [\n            { no: 1, name: \"type\", kind: \"enum\", opt: true, T: () => [\"sui.rpc.v2.OpenSignatureBody.Type\", OpenSignatureBody_Type] },\n            { no: 2, name: \"type_name\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"type_parameter_instantiation\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => OpenSignatureBody },\n            { no: 4, name: \"type_parameter\", kind: \"scalar\", opt: true, T: 13 /*ScalarType.UINT32*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.OpenSignatureBody\n */\nexport const OpenSignatureBody = new OpenSignatureBody$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass FunctionDescriptor$Type extends MessageType<FunctionDescriptor> {\n    constructor() {\n        super(\"sui.rpc.v2.FunctionDescriptor\", [\n            { no: 1, name: \"name\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 5, name: \"visibility\", kind: \"enum\", opt: true, T: () => [\"sui.rpc.v2.FunctionDescriptor.Visibility\", FunctionDescriptor_Visibility] },\n            { no: 6, name: \"is_entry\", kind: \"scalar\", opt: true, T: 8 /*ScalarType.BOOL*/ },\n            { no: 7, name: \"type_parameters\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => TypeParameter },\n            { no: 8, name: \"parameters\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => OpenSignature },\n            { no: 9, name: \"returns\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => OpenSignature }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.FunctionDescriptor\n */\nexport const FunctionDescriptor = new FunctionDescriptor$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass OpenSignature$Type extends MessageType<OpenSignature> {\n    constructor() {\n        super(\"sui.rpc.v2.OpenSignature\", [\n            { no: 1, name: \"reference\", kind: \"enum\", opt: true, T: () => [\"sui.rpc.v2.OpenSignature.Reference\", OpenSignature_Reference] },\n            { no: 2, name: \"body\", kind: \"message\", T: () => OpenSignatureBody }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.OpenSignature\n */\nexport const OpenSignature = new OpenSignature$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass TypeOrigin$Type extends MessageType<TypeOrigin> {\n    constructor() {\n        super(\"sui.rpc.v2.TypeOrigin\", [\n            { no: 1, name: \"module_name\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"datatype_name\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"package_id\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.TypeOrigin\n */\nexport const TypeOrigin = new TypeOrigin$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Linkage$Type extends MessageType<Linkage> {\n    constructor() {\n        super(\"sui.rpc.v2.Linkage\", [\n            { no: 1, name: \"original_id\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"upgraded_id\", kind: \"scalar\", opt: true, T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"upgraded_version\", kind: \"scalar\", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.Linkage\n */\nexport const Linkage = new Linkage$Type();\n"],
  "mappings": "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",
  "names": ["DatatypeDescriptor_DatatypeKind", "OpenSignatureBody_Type", "FunctionDescriptor_Visibility", "OpenSignature_Reference", "Ability"]
}
