{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/name_service.client.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/name_service.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport type { RpcTransport } from \"@protobuf-ts/runtime-rpc\";\nimport type { ServiceInfo } from \"@protobuf-ts/runtime-rpc\";\nimport { NameService } from \"./name_service\";\nimport type { ReverseLookupNameResponse } from \"./name_service\";\nimport type { ReverseLookupNameRequest } from \"./name_service\";\nimport { stackIntercept } from \"@protobuf-ts/runtime-rpc\";\nimport type { LookupNameResponse } from \"./name_service\";\nimport type { LookupNameRequest } from \"./name_service\";\nimport type { UnaryCall } from \"@protobuf-ts/runtime-rpc\";\nimport type { RpcOptions } from \"@protobuf-ts/runtime-rpc\";\n/**\n * @generated from protobuf service sui.rpc.v2.NameService\n */\nexport interface INameServiceClient {\n    /**\n     * @generated from protobuf rpc: LookupName(sui.rpc.v2.LookupNameRequest) returns (sui.rpc.v2.LookupNameResponse);\n     */\n    lookupName(input: LookupNameRequest, options?: RpcOptions): UnaryCall<LookupNameRequest, LookupNameResponse>;\n    /**\n     * @generated from protobuf rpc: ReverseLookupName(sui.rpc.v2.ReverseLookupNameRequest) returns (sui.rpc.v2.ReverseLookupNameResponse);\n     */\n    reverseLookupName(input: ReverseLookupNameRequest, options?: RpcOptions): UnaryCall<ReverseLookupNameRequest, ReverseLookupNameResponse>;\n}\n/**\n * @generated from protobuf service sui.rpc.v2.NameService\n */\nexport class NameServiceClient implements INameServiceClient, ServiceInfo {\n    typeName = NameService.typeName;\n    methods = NameService.methods;\n    options = NameService.options;\n    constructor(private readonly _transport: RpcTransport) {\n    }\n    /**\n     * @generated from protobuf rpc: LookupName(sui.rpc.v2.LookupNameRequest) returns (sui.rpc.v2.LookupNameResponse);\n     */\n    lookupName(input: LookupNameRequest, options?: RpcOptions): UnaryCall<LookupNameRequest, LookupNameResponse> {\n        const method = this.methods[0], opt = this._transport.mergeOptions(options);\n        return stackIntercept<LookupNameRequest, LookupNameResponse>(\"unary\", this._transport, method, opt, input);\n    }\n    /**\n     * @generated from protobuf rpc: ReverseLookupName(sui.rpc.v2.ReverseLookupNameRequest) returns (sui.rpc.v2.ReverseLookupNameResponse);\n     */\n    reverseLookupName(input: ReverseLookupNameRequest, options?: RpcOptions): UnaryCall<ReverseLookupNameRequest, ReverseLookupNameResponse> {\n        const method = this.methods[1], opt = this._transport.mergeOptions(options);\n        return stackIntercept<ReverseLookupNameRequest, ReverseLookupNameResponse>(\"unary\", this._transport, method, opt, input);\n    }\n}\n"],
  "mappings": "AAaA,SAAS,mBAAmB;AAG5B,SAAS,sBAAsB;AAqBxB,MAAM,kBAA6D;AAAA,EAItE,YAA6B,YAA0B;AAA1B;AAH7B,oBAAW,YAAY;AACvB,mBAAU,YAAY;AACtB,mBAAU,YAAY;AAAA,EAEtB;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW,OAA0B,SAAwE;AACzG,UAAM,SAAS,KAAK,QAAQ,CAAC,GAAG,MAAM,KAAK,WAAW,aAAa,OAAO;AAC1E,WAAO,eAAsD,SAAS,KAAK,YAAY,QAAQ,KAAK,KAAK;AAAA,EAC7G;AAAA;AAAA;AAAA;AAAA,EAIA,kBAAkB,OAAiC,SAAsF;AACrI,UAAM,SAAS,KAAK,QAAQ,CAAC,GAAG,MAAM,KAAK,WAAW,aAAa,OAAO;AAC1E,WAAO,eAAoE,SAAS,KAAK,YAAY,QAAQ,KAAK,KAAK;AAAA,EAC3H;AACJ;",
  "names": []
}
