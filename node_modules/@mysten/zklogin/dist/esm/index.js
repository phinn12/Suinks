import "@mysten/sui/zklogin";
import {
  computeZkLoginAddress as suiComputeZkLoginAddress,
  jwtToAddress as suiJwtToAddress
} from "@mysten/sui/zklogin";
import {
  genAddressSeed,
  generateNonce,
  generateRandomness,
  getExtendedEphemeralPublicKey,
  getZkLoginSignature,
  hashASCIIStrToField,
  poseidonHash
} from "@mysten/sui/zklogin";
function computeZkLoginAddress(options) {
  return suiComputeZkLoginAddress({
    ...options,
    legacyAddress: true
  });
}
function jwtToAddress(jwt, userSalt, legacyAddress = true) {
  return suiJwtToAddress(jwt, userSalt, legacyAddress);
}
export {
  computeZkLoginAddress,
  genAddressSeed,
  generateNonce,
  generateRandomness,
  getExtendedEphemeralPublicKey,
  getZkLoginSignature,
  hashASCIIStrToField,
  jwtToAddress,
  poseidonHash
};
//# sourceMappingURL=index.js.map
